const { getRandomId } = require("vk-io");
const { registerClan, clanFromDb } = require("../../api/clan"),
    { chunks, firstLetterToUpper, antiBan, numberWithCommas, dateFormat, numberToSmile } = require("../../api/utils"),
    { vkFromDb, vkId } = require("../../api/acc"),
    { log, logClan } = require("../../api/logs"),
    { users, clans, vkGroup, Keyboard } = require("../../main"),
    { clan_bis, clan_boost } = require("../../vars/clan.json"),
    { sections } = require("../../api/menu/section");

module.exports = [{

    r: /^–∫+–ª+–∞+–Ω+$/i,
    payload: "clan_info",
    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞\n‚úè –ß—Ç–æ–±—ã –æ—Å–Ω–æ–≤–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ \"–ö–ª–∞–Ω —Å–æ–∑–¥–∞—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ]\"");

        let buttons = [
            Keyboard.textButton({
                label: 'üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏',
                payload: {
                    command: 'clan_members',
                    params: {
                        n: 0
                    }
                },
                color: Keyboard.SECONDARY_COLOR
            }),
            Keyboard.textButton({
                label: '‚õî –ü–æ–∫–∏–Ω—É—Ç—å',
                payload: {
                    command: 'clan_leave',
                    params: {
                        accept: false
                    },
                    toId: msg.senderId
                },
                color: Keyboard.NEGATIVE_COLOR
            })],
            clan = clans[user.clan];

        if (clan.members[msg.senderId].rank != "—É—á–∞—Å—Ç–Ω–∏–∫" && msg.isFromUser) {
            buttons.unshift(
                Keyboard.textButton({
                    label: '‚úèÔ∏è –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å',
                    payload: {
                        command: 'clan_rename'
                    },
                    color: Keyboard.SECONDARY_COLOR
                }),
                Keyboard.textButton({
                    label: 'üí∞ –í—ã–¥–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É',
                    payload: {
                        command: 'clan_payclan'
                    },
                    color: Keyboard.POSITIVE_COLOR
                })
            )
        }

        await vkFromDb(clan.creator);

        let params = {
            keyboard: Keyboard.keyboard(buttons).inline()
        }
        if (msg.type == "payload" && msg.params == "no_buttons") {
            params = {}
        }

        msg.send(`üõ° –ö–ª–∞–Ω @id${clan.creator} (${clan.name})
üÜî ID: ${user.clan}
üë§ –ì–ª–∞–≤–∞: @id${clan.creator} (${users[clan.creator].nick})
üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${Object.keys(clan.members).length}
üî• –†–µ–π—Ç–∏–Ω–≥: ${clan.rating}
üí∞ –ö–∞–∑–Ω–∞: ${numberWithCommas(clan.bank)}$
üé≤ –û—á–∫–∏: ${numberWithCommas(clan.points)}
üíº –ë–∏–∑–Ω–µ—Å—ã: ${(clan.boost == null ? "–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç" : clan.boost.biz.map(c => clan_bis[c].emoji + " " + clan_bis[c].name).join(", "))}
‚ö° –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: ${(clan.bpc.length == 0 ? "–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç" : clan.bpc.map(c => clan_boost[c].emoji + " " + clan_boost[c].name).join(", "))}

üìÜ –ö–ª–∞–Ω —Å–æ–∑–¥–∞–Ω: ${dateFormat(new Date(clan.reg_date))}`, params);
    }
},
{

    r: /^–∫+–ª+–∞+–Ω+ —É+—á+–∞+—Å+—Ç+–Ω+–∏+–∫+–∏+( [0-9])?/i,
    payload: "clan_members",
    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞\n‚úè –ß—Ç–æ–±—ã –æ—Å–Ω–æ–≤–∞—Ç—å, –≤–≤–µ–¥–∏—Ç–µ \"–ö–ª–∞–Ω —Å–æ–∑–¥–∞—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ]\"");

        let members = [],
            clan = clans[user.clan],
            params = {},
            postfix = "",
            listn,
            n = 0;

        for (let i in clan.members) {
            await vkFromDb(i);
            n++;
            members.push(`${numberToSmile(n)}. @id${i} (${users[i].nick}) | ${firstLetterToUpper(clan.members[i].rank)} | ${clan.members[i].rate}üî•`);
        }

        members = chunks(members, 20);

        if (msg.type == "payload") {
            listn = msg.params.n;
        } else if (msg.match[1]) {
            listn = parseInt(msg.match[1]) - 1;
        } else {
            listn = 0;
        }

        if (members[1]) {
            postfix = '\n‚ùî –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤'
            if (listn == 0) {
                params = {
                    keyboard: Keyboard.keyboard([
                        Keyboard.textButton({
                            label: '‚ñ∂',
                            payload: {
                                command: 'clan_members',
                                params: {
                                    n: 1
                                }
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ]).inline()
                };
            } else if (listn != members.length - 1) {
                params = {
                    keyboard: Keyboard.keyboard([[
                        Keyboard.textButton({
                            label: '‚óÄ',
                            payload: {
                                command: 'clan_members',
                                params: {
                                    n: listn - 1
                                }
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                        Keyboard.textButton({
                            label: '‚ñ∂',
                            payload: {
                                command: 'clan_members',
                                params: {
                                    n: listn + 1
                                }
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ]]).inline()
                };
            } else {
                params = {
                    keyboard: Keyboard.keyboard([
                        Keyboard.textButton({
                            label: '‚óÄ',
                            payload: {
                                command: 'clan_members',
                                params: {
                                    n: listn - 1
                                }
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ]).inline()
                };
            }
        }

        msg.send(`üõ° –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª–∞–Ω–∞ "${clan.name}":
${members[listn].join("\n")}
${postfix}`, params);
    }
},
{

    r: /^–∫+–ª+–∞+–Ω+ —Å–æ–∑–¥–∞—Ç—å( (.*))?/i,
    scene: 'clan_create',
    async f(msg, user) {
        if (user.clan) return msg.send("üö´ –£ –≤–∞—Å –µ—Å—Ç—å –∫–ª–∞–Ω");
        if (user.money < 1000000) return msg.send("üö´ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥\nüí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å: 1,000,000$\nüí∞ –£ –≤–∞—Å –Ω–∞ —Ä—É–∫–∞—Ö: " + numberWithCommas(user.money) + "$");
        let name;
        if (msg.type == "scene") {
            if (!msg.hasText) return msg.send("üö´ –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ\n‚úè –î–ª—è –æ—Ç–º–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ \"–û—Ç–º–µ–Ω–∞\"");
            if ((/^–æ—Ç–º–µ–Ω–∞/i).test(msg.text)) {
                msg.send("üö´ –û—Ç–º–µ–Ω–µ–Ω–æ");
                return user.scene = null;
            }
            name = msg.text;
            user.scene = null;
        } else {
            if (!msg.match[2]) return msg.send("üö´ –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ\n‚úè –ö–ª–∞–Ω —Å–æ–∑–¥–∞—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ]");
            name = msg.match[2];
        }
        name = antiBan(name).replace(/(\[|\]|\@|\(|\)|\*)/g, "");
        if (name.length > 16) return msg.send(`üö´ –ù–µ –¥–ª–∏–Ω–Ω–µ–µ —á–µ–º 16 —Å–∏–º–≤–æ–ª–æ–≤`);
        if (name.length < 1) return msg.send(`üö´ –ù–µ–≤–∞–ª–∏–¥–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ`);

        let params = {}, str = await registerClan(msg.senderId, name);

        if (user.menu && msg.isFromUser) params = { keyboard: sections.clan(msg.senderId, clans[user.clan]) };

        msg.send(str, params);
    }
},
{
    payload: "clan_create",

    f(msg, user) {
        if (user.clan) return msg.send("üö´ –£ –≤–∞—Å –µ—Å—Ç—å –∫–ª–∞–Ω. –°–ø–µ—Ä–≤–∞ –ø–æ–∫–∏–Ω—å—Ç–µ", {
            keyboard: Keyboard.keyboard([
                Keyboard.textButton({
                    label: "‚õî –ü–æ–∫–∏–Ω—É—Ç—å",
                    payload: {
                        command: "clan_leave"
                    },
                    color: Keyboard.NEGATIVE_COLOR
                })
            ]).inline()
        });
        if (user.money < 1000000) return msg.send("üö´ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥\nüí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å: 1,000,000$\nüí∞ –£ –≤–∞—Å –Ω–∞ —Ä—É–∫–∞—Ö: " + numberWithCommas(user.money) + "$");
        user.scene = "clan_create";
        msg.send('‚úè –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∫–ª–∞–Ω–∞\nüö´ –î–ª—è –æ—Ç–º–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ "–û—Ç–º–µ–Ω–∞"');
    }
},
{

    r: /^–∫+–ª+–∞+–Ω+ –ø+—Ä+–∏+–≥+–ª+–∞+—Å+–∏+—Ç+—å+( ([^\s]+))?/i,
    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");
        if (!msg.match[1] && !msg.hasReplyMessage) return msg.send(`üö´ –ö–ª–∞–Ω –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å [ID/–°—Å—ã–ª–∫–∞]`);

        let id = msg.hasReplyMessage ? msg.replyMessage.senderId : await vkId(msg.match[2]), clan = clans[user.clan];
        await vkFromDb(id);
        if (!users[id]) return msg.send(`üö´ –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω`);

        if (users[id].clan) return msg.send(`üö´ –ò–≥—Ä–æ–∫ —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª–∞–Ω–µ`);

        let clanid = user.clan + "";

        if (users[id].other[clanid] != null) return msg.send("üö´ –ò–≥—Ä–æ–∫–∞ —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª–∏ –≤ —ç—Ç–æ—Ç –∫–ª–∞–Ω");

        users[id].other[clanid] = {
            author: msg.senderId
        }
        msg.send(`üõ° @id${id} (${users[id].nick}) –ø—Ä–∏–≥–ª–∞—à–µ–Ω –≤ –∫–ª–∞–Ω "${clan.name}"`);
        logClan(clanid, { type: "invite", params: { by: msg.senderId, to: id } });
        vkGroup.api.messages.send({
            user_id: id,
            message: `üõ° @id${msg.senderId} (${user.nick}) –ø—Ä–∏–≥–ª–∞—Å–∏–ª –≤–∞—Å –≤ –∫–ª–∞–Ω "${clan.name}"`,
            keyboard: Keyboard.keyboard([
                Keyboard.textButton({
                    label: 'üì≤ –ü—Ä–∏–Ω—è—Ç—å',
                    payload: {
                        command: 'clan_accept',
                        params: {
                            id: clanid
                        }
                    },
                    color: Keyboard.PRIMARY_COLOR
                })
            ]).inline(),
            random_id: getRandomId()
        }).catch(() => { });
    }
},
{

    r: /^–∫+–ª+–∞+–Ω+ –ø+—Ä+–∏+–Ω+—è+—Ç+—å+( [0-9]+)?/i,
    payload: "clan_accept",
    async f(msg, user) {
        if (user.clan) return msg.send("üö´ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–ª–∞–Ω\n‚úè –ü–æ–∫–∏–Ω—å—Ç–µ –∫–ª–∞–Ω, –Ω–∞–ø–∏—Å–∞–≤: \"–ö–ª–∞–Ω –ø–æ–∫–∏–Ω—É—Ç—å\"");

        let clanid;
        if (msg.type == "payload") {
            clanid = msg.params.id;
        } else if (msg.match[1]) {
            clanid = parseInt(msg.match[1]);
        } else {
            return msg.send("üö´ –í—ã –Ω–µ –≤–≤–µ–ª–∏ –∞–π–¥–∏ –∫–ª–∞–Ω–∞\n‚úè –ö–ª–∞–Ω –ø—Ä–∏–Ω—è—Ç—å [ID]");
        }

        if (user.other[clanid] == null) return msg.send("üö´ –í–∞—Å –Ω–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª–∏ –≤ —ç—Ç–æ—Ç –∫–ª–∞–Ω");

        let clan = clans[clanid];

        await clanFromDb(clanid);
        await vkFromDb(user.other[clanid].author);

        if (clan.name == "deleted") return msg.send("üö´ –≠—Ç–æ—Ç –∫–ª–∞–Ω —É–∂–µ —É–¥–∞–ª–µ–Ω");
        if (Object.keys(clan.members).length >= 100) return msg.send("üö´ –ö–ª–∞–Ω –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω");

        logClan(clanid, { type: "accept_invite", params: { id: msg.senderId, by: user.other[clanid].author } });

        vkGroup.api.messages.send({
            user_ids: Object.keys(clan.members).join(","),
            message: `üõ° @id${msg.senderId} (${user.nick}) –≤—Å—Ç—É–ø–∏–ª –≤ –∫–ª–∞–Ω
‚úâ –ü—Ä–∏–≥–ª–∞—Å–∏–ª: @id${user.other[clanid].author} (${users[user.other[clanid].author].nick})`,
            random_id: getRandomId()
        });
        msg.send("üõ° –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ");

        user.other = {};
        user.clan = clanid;
        clan.members[msg.senderId] = {
            rank: "—É—á–∞—Å—Ç–Ω–∏–∫",
            rate: 0,
            rateweek: 0,
            joindate: +new Date()
        }
    }
},
{

    payload: "clan_invites",
    r: /^–∫–ª–∞–Ω –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è(?: (.*))?$/i,
    async f(msg, user) {
        if (msg.type == "cmd" && msg.match[1] == "–æ—Ç–∫–ª—é—á–∏—Ç—å") {
            if (user.status.type == 0) return msg.send("üíª –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å V.I.P. –∏ –≤—ã—à–µ", {
                attachment: "market-151782797_1753856"
            });
            if (user.clan_dis_invite) {
                msg.send("‚õî –í–∞—Å –∏ —Ç–∞–∫, –Ω–µ –º–æ–≥—É—Ç –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –≤ –∫–ª–∞–Ω—ã");
            } else {
                user.clan_dis_invite = true;
                msg.send("‚õî –¢–µ–ø–µ—Ä—å –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤–∞—Å –≤ –∫–ª–∞–Ω");
            }
        } else if (msg.type == "cmd" && msg.match[1] == "–≤–∫–ª—é—á–∏—Ç—å") {
            if (user.status.type == 0) return msg.send("üíª –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å V.I.P. –∏ –≤—ã—à–µ", {
                attachment: "market-151782797_1753856"
            });
            if (user.clan_dis_invite) {
                delete user.clan_dis_invite;
                msg.send("‚úÖ –¢–µ–ø–µ—Ä—å –≤–∞—Å –º–æ–≥—É—Ç –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –∫–ª–∞–Ω");
            } else {
                msg.send("‚úÖ –í–∞—Å –∏ —Ç–∞–∫, –º–æ–≥—É—Ç –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –≤ –∫–ª–∞–Ω—ã");
            }
        } else {
            let invites = [];
            for (let i in user.other) {
                await clanFromDb(i);
                if (clans[i].name != "deleted") {
                    await vkFromDb(user.other[i].author);
                    invites.push(`${numberToSmile(i)} ${clans[i].name} - @id${user.other[i].author} (${users[user.other[i].author].nick})`);
                }
            }
            if (invites.length == 0) return msg.send(msg.prefix + "–≤–∞—Å –ø–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª –≤ –∫–ª–∞–Ω ");
            msg.send(msg.prefix + "–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:\n" + invites.join("\n") + '\n\n‚ùî –ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å, –≤–≤–µ–¥–∏—Ç–µ "–ö–ª–∞–Ω –ø—Ä–∏–Ω—è—Ç—å [–Ω–æ–º–µ—Ä]"', {
                keyboard: Keyboard.keyboard([
                    Keyboard.textButton({
                        label: "üßπ –û—á–∏—Å—Ç–∏—Ç—å",
                        payload: {
                            command: "clan_clear"
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]).inline()
            });
        }
    }
},
{
    payload: "clan_clear",

    f(msg, user) {
        user.other = {};
        msg.send(msg.prefix + "–≤—Å–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã");
    }
},
{
    r: /^–∫–ª–∞–Ω –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å( (.*))?/i,
    scene: "clan_rename",

    f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");

        let clan = clans[user.clan],
            text,
            buffclan = { ...clan };

        if (clan.members[msg.senderId].rank == "—É—á–∞—Å—Ç–Ω–∏–∫") return msg.send("üö´ –ú–æ–≥—É—Ç –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –∫–ª–∞–Ω–∞");
        if (msg.type == "scene") {
            if (!msg.hasText) return msg.send("üö´ –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ\n‚úè –î–ª—è –æ—Ç–º–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ \"–û—Ç–º–µ–Ω–∞\"");
            if ((/^–æ—Ç–º–µ–Ω–∞/i).test(msg.text)) {
                msg.send("üö´ –û—Ç–º–µ–Ω–µ–Ω–æ");
                return user.scene = null;
            }
            text = msg.text;
            user.scene = null;
        } else {
            if (!msg.match[2]) return msg.send("üö´ –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ\n‚úè –ö–ª–∞–Ω –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å [–Ω–∞–∑–≤–∞–Ω–∏–µ]");
            text = msg.match[2];
        }

        text = antiBan(text, "").replace(/(\[|\]|\@|\(|\)|\*)/g, "");
        if (!text.length) return msg.send("üö´ –£–∫–∞–∂–∏—Ç–µ –≤–∞–ª–∏–¥–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ");
        if (text.length > 16) return msg.send("üö´ –ù–µ –¥–ª–∏–Ω–Ω–µ–µ —á–µ–º 16 —Å–∏–º–≤–æ–ª–æ–≤");
        clan.name = text;

        msg.send("üõ° –ö–ª–∞–Ω –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ \"" + clan.name + "\"");
        logClan(user.clan, { type: "rename", params: { id: msg.senderId, new_name: clan.name, old_name: buffclan.name } });
        vkGroup.api.messages.send({
            user_ids: Object.keys(clan.members).join(","),
            message: `üõ° @id${msg.senderId} (${user.nick}) –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª –∫–ª–∞–Ω
‚úè –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${clan.name}`,
            random_id: getRandomId()
        });
    }
},
{
    payload: "clan_rename",

    f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");
        user.scene = "clan_rename";
        msg.send('‚úè –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ\nüö´ –î–ª—è –æ—Ç–º–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ "–û—Ç–º–µ–Ω–∞"');
    }
},
{
    r: /^–∫–ª–∞–Ω –ø–æ–≤—ã—Å–∏—Ç—å( ([^\s]+))?/i,
    payload: "clan_rank_up",

    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");
        if (clans[user.clan].members[msg.senderId].rank != "–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å") return msg.send("üö´ –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–æ–≤—ã—à–∞—Ç—å");

        let bufid;
        if (msg.type == "payload") {
            bufid = msg.params.id;
        } else {
            if (!msg.match[2]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ –ø–æ–≤—ã—à–∞—Ç—å\n‚úè –ö–ª–∞–Ω –ø–æ–≤—ã—Å–∏—Ç—å [ID/—Å—Å—ã–ª–∫–∞]");
            bufid = msg.match[2];
        }

        let clan = clans[user.clan], id = await vkId(bufid);
        await vkFromDb(id);
        if (!users[id]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ –ø–æ–≤—ã—Å–∏—Ç—å –∏–ª–∏ –¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\n‚úè –ö–ª–∞–Ω –ø–æ–≤—ã—Å–∏—Ç—å [ID/—Å—Å—ã–ª–∫–∞]");
        if (!clan.members[id]) return msg.send("üö´ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ");
        if (clan.members[id].rank == "–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å") return msg.send("üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å —Å–µ–±—è");

        if (clan.members[id].rank == "—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å") {
            msg.send(`‚ùó –í—ã –ø–µ—Ä–µ–¥–∞–µ—Ç–µ –≥–ª–∞–≤—É –∫–ª–∞–Ω–∞ –∏–≥—Ä–æ–∫—É @id${id} (${users[id].nick}), –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∫–Ω–æ–ø–∫–æ–π —Å–Ω–∏–∑—É\n‚ùó –î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –æ—Ç–º–µ–Ω–∏—Ç—å`, {
                keyboard: Keyboard.keyboard([
                    Keyboard.textButton({
                        label: '‚ùó –ü–û–î–¢–í–ï–†–ñ–î–ê–Æ',
                        payload: {
                            command: 'clan_give_owner',
                            params: {
                                id: id
                            },
                            toId: msg.senderId
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]).inline()
            });
        } else {
            clan.members[id].rank = "—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å";
            logClan(user.clan, { type: "clan_member_change_rank", params: { by: msg.senderId, to: id, new_rank: "—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å" } });
            msg.send(`üõ° –í—ã –ø–æ–≤—ã—Å–∏–ª–∏ @id${id} (${users[id].nick})`, {
                keyboard: Keyboard.keyboard([
                    Keyboard.textButton({
                        label: '‚ùó –û—Ç–º–µ–Ω–∏—Ç—å',
                        payload: {
                            command: 'clan_rank_down',
                            params: {
                                id: id
                            },
                            toId: msg.senderId
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]).inline()
            });
        }
    }
},
{
    r: /^–∫–ª–∞–Ω –ø–æ–Ω–∏–∑–∏—Ç—å( ([^\s]+))?/i,
    payload: "clan_rank_down",

    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");
        if (clans[user.clan].members[msg.senderId].rank != "–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å") return msg.send("üö´ –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–æ–Ω–∏–∂–∞—Ç—å");

        let bufid;
        if (msg.type == "payload") {
            bufid = msg.params.id;
        } else {
            if (!msg.match[2]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ –ø–æ–Ω–∏–∑–∏—Ç—å\n‚úè –ö–ª–∞–Ω –ø–æ–Ω–∏–∑–∏—Ç—å [ID/—Å—Å—ã–ª–∫–∞]");
            bufid = msg.match[2];
        }

        let clan = clans[user.clan], id = await vkId(bufid);
        await vkFromDb(id);
        if (!users[id]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ –ø–æ–Ω–∏–∑–∏—Ç—å –∏–ª–∏ –¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\n‚úè –ö–ª–∞–Ω –ø–æ–Ω–∏–∑–∏—Ç—å [ID/—Å—Å—ã–ª–∫–∞]");
        if (!clan.members[id]) return msg.send("üö´ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ");
        if (id == msg.senderId) return msg.send("üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –ø–æ–Ω–∏–∑–∏—Ç—å");

        if (clan.members[id].rank == "—É—á–∞—Å—Ç–Ω–∏–∫") {
            msg.send(`‚ùó –£—á–∞—Å—Ç–Ω–∏–∫ @id${id} (${users[id].nick}) –∏–º–µ–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å`, {
                keyboard: Keyboard.keyboard([
                    Keyboard.textButton({
                        label: 'üßπ –í—ã–≥–Ω–∞—Ç—å',
                        payload: {
                            command: 'clan_kick',
                            params: {
                                id: id
                            },
                            toId: msg.senderId
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]).inline()
            });
        } else if (clan.members[id].rank == "–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å") {
            msg.send(`‚ùó –ì–ª–∞–≤—É –∫–ª–∞–Ω–∞ –Ω–µ–ª—å–∑—è –ø–æ–Ω–∏–∑–∏—Ç—å`);
        } else {
            clan.members[id].rank = "—É—á–∞—Å—Ç–Ω–∏–∫";
            logClan(user.clan, { type: "clan_member_change_rank", params: { by: msg.senderId, to: id, new_rank: "—É—á–∞—Å—Ç–Ω–∏–∫" } });
            msg.send(`üõ° –í—ã –ø–æ–Ω–∏–∑–∏–ª–∏ @id${id} (${users[id].nick})`, {
                keyboard: Keyboard.keyboard([
                    Keyboard.textButton({
                        label: '‚ùó –û—Ç–º–µ–Ω–∏—Ç—å',
                        payload: {
                            command: 'clan_rank_up',
                            params: {
                                id: id
                            },
                            toId: msg.senderId
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]).inline()
            });
        }
    }
},
{
    r: /^–∫–ª–∞–Ω –≤—ã–≥–Ω–∞—Ç—å( ([^\s]+))?/i,
    payload: "clan_kick",

    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");
        if (clans[user.clan].members[msg.senderId].rank == "—É—á–∞—Å—Ç–Ω–∏–∫") return msg.send("üö´ –¢–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∏—Å–∫–ª—é—á–∞—Ç—å");

        let bufid;
        if (msg.type == "payload") {
            bufid = msg.params.id;
        } else {
            if (!msg.match[2]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ –≤—ã–≥–Ω–∞—Ç—å\n‚úè –ö–ª–∞–Ω –≤—ã–≥–Ω–∞—Ç—å [ID/—Å—Å—ã–ª–∫–∞]");
            bufid = msg.match[2];
        }

        let clan = clans[user.clan], id = await vkId(bufid);
        await vkFromDb(id);
        if (!users[id]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏, –∫–æ–≥–æ –≤—ã–≥–Ω–∞—Ç—å –∏–ª–∏ –¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\n‚úè –ö–ª–∞–Ω –≤—ã–≥–Ω–∞—Ç—å [ID/—Å—Å—ã–ª–∫–∞]");
        if (!clan.members[id]) return msg.send("üö´ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ");
        if (id == msg.senderId) return msg.send("üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –≤—ã–≥–Ω–∞—Ç—å");
        if (clan.members[id].rank != "—É—á–∞—Å—Ç–Ω–∏–∫") return msg.send("üö´ –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–≥–Ω–∞—Ç—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è/–≥–ª–∞–≤—É");

        logClan(user.clan, { type: "clan_kick", params: { by: msg.senderId, to: id } });
        delete users[id].clan;
        delete clan.members[id];
        msg.send(`üõ° –í—ã –≤—ã–≥–Ω–∞–ª–∏ @id${id} (${users[id].nick}) —Å –∫–ª–∞–Ω–∞`);
        vkGroup.api.messages.send({
            user_ids: Object.keys(clan.members).join(","),
            message: `üõ° @id${msg.senderId} (${user.nick}) –≤—ã–≥–Ω–∞–ª —Å –∫–ª–∞–Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ @id${id} (${users[id].nick})`,
            random_id: getRandomId()
        });
    }
},
{
    payload: "clan_give_owner",

    async f(msg, user) {
        if (!user.clan) return;
        if (clans[user.clan].members[msg.senderId].rank != "–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å") return;

        let id = msg.params.id, clan = clans[user.clan];
        if (!clan.members[id]) return;

        await vkFromDb(id);

        logClan(user.clan, { type: "clan_member_change_rank", params: { by: msg.senderId, to: id, new_rank: "–≥–ª–∞–≤–∞" } });
        logClan(user.clan, { type: "clan_member_change_rank", params: { by: msg.senderId, to: msg.senderId, new_rank: "—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å" } });
        msg.send(`üõ° @id${id} (${users[id].nick}) —Ç–µ–ø–µ—Ä—å –≥–ª–∞–≤–∞ –∫–ª–∞–Ω–∞\n‚úâ –í—ã –æ—Å—Ç–∞–ª–∏—Å—å —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º –∫–ª–∞–Ω–∞`);
        vkGroup.api.messages.send({
            user_ids: Object.keys(clan.members).join(","),
            message: `üõ° @id${msg.senderId} (${user.nick}) –Ω–∞–∑–Ω–∞—á–∏–ª –≥–ª–∞–≤–æ–π –∫–ª–∞–Ω–∞ @id${id} (${users[id].nick})
‚úâ @id${msg.senderId} (${user.nick}) –æ—Å—Ç–∞–ª—Å—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º`,
            random_id: getRandomId()
        });
        clan.members[msg.senderId].rank = "—Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å";
        clan.members[id].rank = "–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å";
        clan.creator = id;
        clan.ownergived = true;
    }
},
{
    r: /^–∫–ª–∞–Ω (–ø–æ–∫–∏–Ω—É—Ç—å|–≤—ã–π—Ç–∏)$/i,
    payload: "clan_leave",

    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");

        if (msg.type == "payload") {
            if (!msg.params.accept) return msg.send(`‚ùó –ù–∞–∂–º–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å`, {
                keyboard: Keyboard.keyboard([
                    Keyboard.textButton({
                        label: '‚ùó –ü–æ–∫–∏–Ω—É—Ç—å',
                        payload: {
                            command: 'clan_leave',
                            params: {
                                accept: true
                            },
                            toId: msg.senderId
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]).inline()
            });
        }

        let clan = clans[user.clan];

        if (clan.members[msg.senderId].rank == "–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å") {
            msg.send(`‚ùó –ü–æ–∫–∏–Ω—É–≤ –∫–ª–∞–Ω, –≤—ã —É–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç –∫–ª–∞–Ω. –í—ã —É–≤–µ—Ä–µ–Ω—ã?`, {
                keyboard: Keyboard.keyboard([
                    Keyboard.textButton({
                        label: '‚ùó –ü–æ–∫–∏–Ω—É—Ç—å',
                        payload: {
                            command: 'clan_delete',
                            params: {
                                step: 0
                            },
                            toId: msg.senderId
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]).inline()
            });
        } else {
            logClan(user.clan, { type: "clan_kick", params: { by: msg.senderId, to: msg.senderId } });
            msg.send(`üõ° –í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –∫–ª–∞–Ω "${clan.name}"`);
            vkGroup.api.messages.send({
                user_ids: Object.keys(clan.members).join(","),
                message: `üõ° ${firstLetterToUpper(clan.members[msg.senderId].rank)} @id${msg.senderId} (${user.nick}) –ø–æ–∫–∏–Ω—É–ª –∫–ª–∞–Ω`,
                random_id: getRandomId()
            });

            delete clan.members[msg.senderId];
            delete user.clan;
        }
    }
},
{
    payload: "clan_delete",

    async f(msg, user) {
        if (!user.clan) return;
        if (clans[user.clan].members[msg.senderId].rank != "–æ—Å–Ω–æ–≤–∞—Ç–µ–ª—å") return;

        if (msg.params.step == 0) {
            msg.send(`‚ùó –î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –æ—Ç–º–µ–Ω–∏—Ç—å. –í—ã —É–≤–µ—Ä–µ–Ω—ã?`, {
                keyboard: Keyboard.keyboard([
                    Keyboard.textButton({
                        label: '‚ùó –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é',
                        payload: {
                            command: 'clan_delete',
                            params: {
                                step: 1
                            },
                            toId: msg.senderId
                        },
                        color: Keyboard.NEGATIVE_COLOR
                    })
                ]).inline()
            });
        } else {
            let clan = clans[user.clan];
            await vkGroup.api.messages.send({
                user_ids: Object.keys(clan.members).join(","),
                message: "‚ùó [id" + msg.senderId + "|" + user.nick + "] –∑–∞–∫—Ä—ã–ª(–∞) –∫–ª–∞–Ω ",
                random_id: getRandomId()
            });
            logClan(user.clan, { type: "clan_remove", params: { by: msg.senderId } });
            for (let i in clan.members) {
                await vkFromDb(i);
                users[i].clan = null;
            }
            clan.name = "deleted";
            clan.members = {};
            clan.creator = 1;
            user.clan = null;

            if (msg.isFromUser && user.menu) {
                msg.send("‚úÖ –ö–ª–∞–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω", {
                    keyboard: sections.main_menu()
                });
            } else {
                msg.send("‚úÖ –ö–ª–∞–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω");
            }
        }
    }
},
{
    r: /^–∫–ª–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫( ([^\s]+))?$/i,

    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");
        if (!msg.match[2]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∏–≥—Ä–æ–∫–∞\n‚úè –ö–ª–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫ [ID/—Å—Å—ã–ª–∫–∞]");

        let id = await vkId(msg.match[2]),
            clan = clans[user.clan],
            params = {};
        await vkFromDb(id);

        if (!users[id]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω\n‚úè –ö–ª–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫ [ID/—Å—Å—ã–ª–∫–∞]");
        if (!clan.members[id]) return msg.send("üö´ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –≤–∞—à–µ–º –∫–ª–∞–Ω–µ");

        if (clan.members[msg.senderId].rank != "—É—á–∞—Å—Ç–Ω–∏–∫") {
            params = {
                keyboard: Keyboard.keyboard([
                    [
                        Keyboard.textButton({
                            label: 'üîº –ü–æ–≤—ã—Å–∏—Ç—å',
                            payload: {
                                command: 'clan_rank_up',
                                params: {
                                    id: id
                                },
                                toId: msg.senderId
                            },
                            color: Keyboard.POSITIVE_COLOR
                        }),
                        Keyboard.textButton({
                            label: 'üîΩ –ü–æ–Ω–∏–∑–∏—Ç—å',
                            payload: {
                                command: 'clan_rank_down',
                                params: {
                                    id: id
                                },
                                toId: msg.senderId
                            },
                            color: Keyboard.NEGATIVE_COLOR
                        })
                    ],
                    [
                        Keyboard.textButton({
                            label: 'üßπ –ò—Å–∫–ª—é—á–∏—Ç—å',
                            payload: {
                                command: 'clan_kick',
                                params: {
                                    id: id
                                },
                                toId: msg.senderId
                            },
                            color: Keyboard.NEGATIVE_COLOR
                        })
                    ]
                ]).inline()
            }
        }

        msg.send(`üõ° ${firstLetterToUpper(clan.members[id].rank)} @id${id} (${users[id].nick})
üî• –ù–∞–±–∏—Ç—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: ${clan.members[id].rate}
üìÖ –í—Å—Ç—É–ø–∏–ª –≤ –∫–ª–∞–Ω: ${clan.members[id].joindate ? dateFormat(new Date(clan.members[id].joindate)) : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}`, params); //üî• –ù–∞–±–∏—Ç—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∑–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é: ${clan.members[id].rateweek}
    }
},
{
    r: /^–∫–ª–∞–Ω (?:–ø—ç–π–∫–ª–∞–Ω|–∑–∞—Ä–ø–ª–∞—Ç–∞)( ([^\s]+))?/i,
    scene: "clan_payclan",
    payload: "clan_payclan",

    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç –∫–ª–∞–Ω–∞");
        if (clans[user.clan].members[msg.senderId].rank == "—É—á–∞—Å—Ç–Ω–∏–∫") return msg.send("üö´ –¢–æ–ª—å–∫–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É");

        let money,
            clan = clans[user.clan];;

        if (msg.type == "payload") {
            user.scene = "clan_payclan";
            return msg.send("‚úè –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥ –¥–ª—è –≤—ã–¥–∞—á–∏ –∑–∞—Ä–ø–ª–∞—Ç—ã\nüí∞ –ö–∞–∑–Ω–∞: " + numberWithCommas(clan.bank) + "$\nüö´ –î–ª—è –æ—Ç–º–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ \"–û—Ç–º–µ–Ω–∞\"");
        } else if (msg.type == "scene") {
            if ((/^–æ—Ç–º–µ–Ω–∞/i).test(msg.text)) {
                msg.send("üö´ –û—Ç–º–µ–Ω–µ–Ω–æ");
                return user.scene = null;
            }
            money = msg.text;
        } else {
            if (!msg.match[1]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥\n‚úè –ö–ª–∞–Ω –ø—ç–π–∫–ª–∞–Ω [—Å—É–º–º–∞]");
            money = msg.match[2];
        }

        money = parseInt(money.replace(/–≤—Å–µ|–≤—Å—ë/, clan.bank).replace(/(k|–∫)/gi, "000"));
        if (isNaN(money)) return msg.send("üö´ –í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–Ω–µ–≥\nüí∞ –ö–∞–∑–Ω–∞: " + numberWithCommas(clan.bank) + "$\n‚úè –ö–ª–∞–Ω –ø—ç–π–∫–ª–∞–Ω [—Å—É–º–º–∞]");

        if (clan.bank < money) return msg.send("üö´ –í –∫–∞–∑–Ω–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ\nüí∞ –ö–∞–∑–Ω–∞: " + numberWithCommas(clan.bank) + "$\n‚úè –ö–ª–∞–Ω –ø—ç–π–∫–ª–∞–Ω [—Å—É–º–º–∞]");
        if (money < 1000) return msg.send("üö´ –ù–µ –º–µ–Ω—å—à–µ —á–µ–º 1000$");

        let money_per_user = Math.floor(money / Object.keys(clan.members).length);
        for (let i in clan.members) {
            await vkFromDb(i);
            users[i].money += money_per_user;
            log(msg.senderId, `–ü–æ–ª—É—á–∏–ª –∑–ø –∫–ª–∞–Ω–∞ ${money_per_user}$`);
        }
        clan.bank -= money;

        logClan(user.clan, { type: "clan_pay", params: { by: msg.senderId, money: money, per_money: money_per_user, count_users: Object.keys(clan.members).length } });
        msg.send(`üõ° –í—ã –≤—ã–¥–∞–ª–∏ –∑–∞—Ä–ø–ª–∞—Ç—É –∫–ª–∞–Ω—É ${numberWithCommas(money)}$
üí∞ –ö–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –≤—ã–¥–∞–Ω–æ ${numberWithCommas(money_per_user)}$`);
        vkGroup.api.messages.send({
            user_ids: Object.keys(clan.members).join(","),
            message: `üõ° ${firstLetterToUpper(clan.members[msg.senderId].rank)} @id${msg.senderId} (${user.nick})
üí∞ –ö–∞–∂–¥–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –≤—ã–¥–∞–Ω–æ ${numberWithCommas(money_per_user)}$`,
            random_id: getRandomId()
        });
    }
},
{
    r: /^–∫–ª–∞–Ω –ø–æ–ø–æ–ª–Ω–∏—Ç—å( ([^\s]+))?/i,

    f(msg, user) {
        if (!user.clan) return msg.send("üö´ –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ");
        if (user.banpay) return msg.send("üö´ –í–∞–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø–µ—Ä–µ–≤–æ–¥—ã –¥–µ–Ω–µ–≥");
        if (((+new Date() - (+new Date(clans[user.clan].reg_date))) / 1000) < 604800) return msg.send("üö´ –ö–ª–∞–Ω—É –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω–µ–¥–µ–ª–∏");
        if (Object.keys(clans[user.clan].members).length < 10) return msg.send("üö´ –í –∫–ª–∞–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª–µ–µ 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤");

        if (user.status.type < 3 && user.limitpay == null) {
            if (user.status.type == 0 && user.limit == 3) {
                if ((+new Date() - user.limtime) / 1000 < 21600) return msg.send(`üö´ –ù–µ –±–æ–ª—å—à–µ —á–µ–º 3 –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ 6 —á–∞—Å–æ–≤
üïí –ñ–¥–∞—Ç—å –µ—â–µ: ${fancyTimeFormat(Math.floor(21600 - (+new Date() - user.limtime) / 1000))}`);;
                user.limit = 0;
            } else if (user.status.type == 1 && user.limit == 6) {
                if ((+new Date() - user.limtime) / 1000 < 21600) return msg.send(`üö´ –ù–µ –±–æ–ª—å—à–µ —á–µ–º 6 –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ 6 —á–∞—Å–æ–≤
üïí –ñ–¥–∞—Ç—å –µ—â–µ: ${fancyTimeFormat(Math.floor(21600 - (+new Date() - user.limtime) / 1000))}`);;
                user.limit = 0;
            } else if (user.status.type == 2 && user.limit == 10) {
                if ((+new Date() - user.limtime) / 1000 < 21600) return msg.send(`üö´ –ù–µ –±–æ–ª—å—à–µ —á–µ–º 10 –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –≤ 6 —á–∞—Å–æ–≤
üïí –ñ–¥–∞—Ç—å –µ—â–µ: ${fancyTimeFormat(Math.floor(21600 - (+new Date() - user.limtime) / 1000))}`);;
                user.limit = 0;
            }
        }

        if (!msg.match[2]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É\n‚úè –ö–ª–∞–Ω –ø–æ–ø–æ–ª–Ω–∏—Ç—å [—Å—É–º–º–∞]");
        let money = parseInt(msg.match[2].replace(/–≤—Å–µ|–≤—Å—ë/, user.money).replace(/(k|–∫)/gi, "000"));

        if (isNaN(money)) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—É–º–º—É\n‚úè –ö–ª–∞–Ω –ø–æ–ø–æ–ª–Ω–∏—Ç—å [—Å—É–º–º–∞]");
        if (money < 1) return msg.send("üö´ –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—É–º–º—É\n‚úè –ö–ª–∞–Ω –ø–æ–ø–æ–ª–Ω–∏—Ç—å [—Å—É–º–º–∞]");
        if (money > user.money) return msg.send("üö´ –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥\nüí∞ –ù–∞ —Ä—É–∫–∞—Ö: " + numberWithCommas(user.money) + "$");
        if (money > 10000000000 && user.status.type < 100) return msg.send(prefix + "–Ω–µ –±–æ–ª—å—à–µ 10–º–ª—Ä–¥ –∑–∞ —Ä–∞–∑");

        log(msg.senderId, `–ü–æ–ø–æ–ª–Ω–∏–ª –∫–∞–∑–Ω—É –∫–ª–∞–Ω–∞ "${clans[user.clan]}" [${user.clan}] –Ω–∞ ${numberWithCommas(money)}$ | –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(user.money + money)}$`)
        logClan(user.clan, { type: "pay_to_clan", params: { from_id: msg.senderId, money: money, bmoney: clans[user.clan].bank, amoney: clans[user.clan].bank + money } });

        user.money -= money;
        clans[user.clan].bank += money;

        user.limit++;
        user.limtime = +new Date();

        msg.send(`${msg.prefix}–≤—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –∫–∞–∑–Ω—É –∫–ª–∞–Ω–∞ –Ω–∞ ${numberWithCommas(money)}$
üí∞ –ù–∞ —Ä—É–∫–∞—Ö: ${numberWithCommas(user.money)}$`);
        vkGroup.api.messages.send({
            user_ids: Object.keys(clans[user.clan].members).join(","),
            message: `üõ° @id${msg.senderId} (${user.nick}) –ø–æ–ø–æ–ª–Ω–∏–ª –∫–∞–∑–Ω—É –Ω–∞ ${numberWithCommas(money)}$
üí∞ –ö–∞–∑–Ω–∞: ${numberWithCommas(clans[user.clan].bank)}$`,
            random_id: getRandomId()
        });
    }
},
{
    r: /^–∫–ª–∞–Ω –±–∏–∑–Ω–µ—Å( [0-9]+)?/i,
    payload: "clan_biss",

    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ");
        if (msg.type == "payload" || !msg.match[1]) return msg.send(`üõ°Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–π –±–∏–∑–Ω–µ—Å:
1‚É£. –ó–∞–≤–æ–¥ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
‚†Äüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${numberWithCommas(clan_bis[1].price)}$
‚†Äüí∏ –ü—Ä–∏–Ω–æ—Å–∏—Ç –≤ —á–∞—Å: ${numberWithCommas(clan_bis[1].per_hour)}$

2‚É£. –ó–∞–≤–æ–¥ Foxconn
‚†Äüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${numberWithCommas(clan_bis[2].price)}$
‚†Äüí∏ –ü—Ä–∏–Ω–æ—Å–∏—Ç –≤ —á–∞—Å: ${numberWithCommas(clan_bis[2].per_hour)}$

3‚É£. –ö—É–º—ã—Å–Ω—ã–π –∑–∞–≤–æ–¥
‚†Äüí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${numberWithCommas(clan_bis[3].price)}$
‚†Äüí∏ –ü—Ä–∏–Ω–æ—Å–∏—Ç –≤ —á–∞—Å: ${numberWithCommas(clan_bis[3].per_hour)}$

üí¨ –î–ª—è –ø–æ–∫—É–ø–∫–∏, –≤–≤–µ–¥–∏—Ç–µ: –ö–ª–∞–Ω –±–∏–∑–Ω–µ—Å [–Ω–æ–º–µ—Ä]`);

        let n = parseInt(msg.match[1]),
            id = user.clan;
        if (clan_bis[n]) {
            if (clans[id].bank < clan_bis[n].price) return msg.send(msg.prefix + "–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –≤ –∫–∞–∑–Ω–µ –∫–ª–∞–Ω–∞\nüí∞ –í –∫–∞–∑–Ω–µ: " + numberWithCommas(clans[id].bank) + "$");
            if (clans[id].boost == null) clans[id].boost = {
                biz: [],
                lastCheck: +new Date()
            };
            if (clans[id].boost.biz.indexOf(parseInt(n)) != -1) return msg.send(msg.prefix + "–¥–∞–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å —É–∂–µ –µ—Å—Ç—å —É –∫–ª–∞–Ω–∞");
            clans[id].bank -= clan_bis[n].price;
            clans[id].boost.biz.push(parseInt(n));
            msg.send(msg.prefix + "–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –∫–ª–∞–Ω—É: " + clan_bis[n].emoji + " " + clan_bis[n].name);
            vkGroup.api.messages.send({
                user_ids: Object.keys(clans[user.clan].members).join(","),
                message: `üõ° @id${msg.senderId} (${user.nick}) –∫—É–ø–∏–ª –∫–ª–∞–Ω—É ${clan_bis[n].emoji + " " + clan_bis[n].name}
üí∞ –ö–∞–∑–Ω–∞: ${numberWithCommas(clans[user.clan].bank)}$`,
                random_id: getRandomId()
            });
        }
    }
},
{
    r: /^–∫–ª–∞–Ω –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏( [0-9]+)?/i,
    payload: "clan_boost",

    async f(msg, user) {
        if (!user.clan) return msg.send("üö´ –í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ");
        if (msg.type == "payload" || !msg.match[1]) return msg.send(`üõ°Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚†Ä1. üî• –î–≤–æ–π–Ω–æ–π —Ä–µ–π—Ç–∏–Ω–≥ - 10 –æ—á–∫–æ–≤
‚†Ä2. üî´ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∏ –Ω–∞ 2 - 5 –æ—á–∫–æ–≤
‚†Ä3. üî´ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –ø–∞—Ç—Ä–æ–Ω—ã - 10 –æ—á–∫–æ–≤
‚†Ä4. üìà –£–º–Ω–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–±—ã–ª–∏ –±–∏–∑–Ω–µ—Å–æ–≤ –∫–ª–∞–Ω–∞ –Ω–∞ 1.5 - 10 –æ—á–∫–æ–≤
‚†Ä5. ‚ù§ 200 HP –≤ –ø–µ—Ä–µ—Å—Ç—Ä–µ–ª–∫–∞—Ö - 10 –æ—á–∫–æ–≤
‚†Ä6. üíÄ –í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ —Å–æ–∫—Ä–∞—â–µ–Ω–æ –Ω–∞ 2 - 5 –æ—á–∫–æ–≤

üí¨ –î–ª—è –ø–æ–∫—É–ø–∫–∏, –≤–≤–µ–¥–∏—Ç–µ: –ö–ª–∞–Ω –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ [–Ω–æ–º–µ—Ä]`, {
            keyboard: Keyboard.keyboard([
                Keyboard.textButton({
                    label: '‚ùî –ß—Ç–æ —Ç–∞–∫–æ–µ –æ—á–∫–∏ –∫–ª–∞–Ω–∞?',
                    payload: {
                        command: 'guide_clan_boost'
                    },
                    color: Keyboard.SECONDARY_COLOR
                })
            ]).inline()
        });

        let n = parseInt(msg.match[1]),
            id = user.clan;
        if (clan_boost[n]) {
            if (clans[id].points < clan_boost[n].price) return msg.send(msg.prefix + "–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –æ—á–∫–æ–≤ –∫–ª–∞–Ω–∞\nüé≤ –û—á–∫–æ–≤: " + numberWithCommas(clans[id].points));
            if (clans[id].bpc == null) clans[id].bpc = [];
            if (clans[id].bpc.indexOf(parseInt(n)) != -1) return msg.send(msg.prefix + "–¥–∞–Ω–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —É–∂–µ –µ—Å—Ç—å —É –∫–ª–∞–Ω–∞");
            clans[id].points -= clan_boost[n].price;
            clans[id].bpc.push(parseInt(n));
            msg.send(msg.prefix + "–∫–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: " + clan_boost[n].emoji + " " + clan_boost[n].name);
            vkGroup.api.messages.send({
                user_ids: Object.keys(clans[user.clan].members).join(","),
                message: `üõ° @id${msg.senderId} (${user.nick}) –∫—É–ø–∏–ª –∫–ª–∞–Ω—É —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å: "${clan_boost[n].emoji + " " + clan_boost[n].name}"
üí∞ –û—á–∫–æ–≤ –∫–ª–∞–Ω–∞: ${numberWithCommas(clans[user.clan].points)}`,
                random_id: getRandomId()
            });
        }
    }
}];