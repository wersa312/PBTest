const { log } = require("../../api/logs");
const { chunks, numberToSmile, randElement, numberWithCommas, clubLink } = require("../../api/utils"),
    { Keyboard } = require("../../main");

module.exports = [{
    r: /^(?:guns|–æ—Ä—É–∂–∏—è)(?: (.*))?$/i,
    payload: "guns",

    async f(msg, user) {
        let guns = [],
            n = 1,
            warning = "",
            postfix = "\n‚ùî –ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –æ—Ä—É–∂–∏–µ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–µ, –≤–≤–µ–¥–∏—Ç–µ \"–û—Ä—É–∂–∏–µ [–Ω–æ–º–µ—Ä]\"",
            params = {},
            list;

        for (let i in user.guns) {
            guns.push(numberToSmile(n) + " " + user.guns[i].name + " | –£—Ä–æ–Ω: " + user.guns[i].damage + " üí• | " + user.guns[i].type.replace(/machine_gun/gi, "–ü—É–ª–µ–º–µ—Ç").replace(/pistol_automatic/gi, "–°–∞–º–æ–∑–∞—Ä—è–¥–Ω—ã–π –ø–∏—Å—Ç–æ–ª–µ—Ç").replace(/automatic/gi, "–í–∏–Ω—Ç–æ–≤–∫–∞").replace(/pistol/gi, "–ü–∏—Å—Ç–æ–ª–µ—Ç").replace(/snipe/gi, "–°–Ω–∞–π–ø–µ—Ä—Å–∫–∞—è –≤–∏–Ω—Ç–æ–≤–∫–∞").replace(/shotgun/gi, "–î—Ä–æ–±–æ–≤–∏–∫") + " üî´ | x" + user.guns[i].count + "");
            n++;
        }

        guns = chunks(guns, 20);

        if (msg.type == "payload") {
            list = msg.params.n;
        } else if (msg.match[1]) {
            list = parseInt(msg.match[1]) - 1;
        } else {
            list = 0;
        }

        if (!guns[list]) {
            list = 0;
            warning = "\nüö´ –°—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ç–æ—Ä—É—é –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç";
        }

        let gun = guns[list];

        if (guns[1]) {
            postfix = `\nüìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${list + 1} –∏–∑ ${guns.length}${warning}\n\n‚ùî –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n‚ñ∂ –ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –æ—Ä—É–∂–∏–µ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–µ, –≤–≤–µ–¥–∏—Ç–µ \"–û—Ä—É–∂–∏–µ [–Ω–æ–º–µ—Ä]\"`
            if (list == 0) {
                params = {
                    keyboard: Keyboard.keyboard([
                        Keyboard.textButton({
                            label: '‚ñ∂',
                            payload: {
                                command: 'guns',
                                params: {
                                    n: 1
                                }
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ]).inline()
                };
            } else if (list != guns.length - 1) {
                params = {
                    keyboard: Keyboard.keyboard([[
                        Keyboard.textButton({
                            label: '‚óÄ',
                            payload: {
                                command: 'guns',
                                params: {
                                    n: list - 1
                                }
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                        Keyboard.textButton({
                            label: '‚ñ∂',
                            payload: {
                                command: 'guns',
                                params: {
                                    n: list + 1
                                }
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ]]).inline()
                };
            } else {
                params = {
                    keyboard: Keyboard.keyboard([
                        Keyboard.textButton({
                            label: '‚óÄ',
                            payload: {
                                command: 'guns',
                                params: {
                                    n: list - 1
                                }
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ]).inline()
                };
            }
        }

        if (gun) {
            msg.send(`${msg.prefix}–≤–∞—à–∏ –æ—Ä—É–∂–∏—è:
${gun.join("\n")}
${postfix}`, params);
        } else {
            msg.send(`${msg.prefix}—É –≤–∞—Å –Ω–µ—Ç –æ—Ä—É–∂–∏–∏ ${randElement(["üòµ", "ü§Ø", "üòß", "üò•", "üò∞", ""])}`, params)
        }
    }
},
{
    r: /^(?:–æ—Ä—É–∂–∏–µ|gun)(?: (.*))?$/i,

    async f(msg, user) {
        if (!msg.match[1] || isNaN(parseInt(msg.match[1]))) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–æ–º–µ—Ä –æ—Ä—É–∂–∏—è. –£–∑–Ω–∞—Ç—å –Ω–æ–º–µ—Ä –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ \"–û—Ä—É–∂–∏—è\"\n‚úè –û—Ä—É–∂–∏–µ [–Ω–æ–º–µ—Ä]");

        let guns = [], id = parseInt(msg.match[1]) - 1;

        for (let i in user.guns) {
            guns.push(user.guns[i].name);
        }

        if (!guns[id]) return msg.send("üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –æ—Ä—É–∂–∏—è. –£–∑–Ω–∞—Ç—å –Ω–æ–º–µ—Ä –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ \"–û—Ä—É–∂–∏—è\"");

        user.fgun_id = guns[id];

        msg.send(`${msg.prefix}–≤—ã —É–∫–∞–∑–∞–ª–∏ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ—Ä—É–∂–∏–µ: üî´ ${guns[id]}`);
    }
},
{
    r: /^(?:skill(?:s)?|—É–º–µ–Ω–∏(?:—è|–∏)|—Å–∫–∏–ª–ª(?:—ã)?)(?: .*)?$/i,

    async f(msg, user) {
        msg.send(msg.prefix + `–≤–∞—à–∏ —É–º–µ–Ω–∏—è —Å—Ç—Ä–µ–ª—å–±—ã:
${getSkillEmoji(user.skill[0].pistol)} –ü–∏—Å—Ç–æ–ª–µ—Ç—ã: ${user.skill[0].pistol}%
${getSkillEmoji(user.skill[0].snipe)} –°–Ω–∞–π–ø–µ—Ä—Å–∫–∏–µ –≤–∏–Ω—Ç–æ–≤–∫–∏: ${user.skill[0].snipe}%
${getSkillEmoji(user.skill[0].shotgun)} –î—Ä–æ–±–æ–≤–∏–∫–∏: ${user.skill[0].shotgun}%
${getSkillEmoji(user.skill[0].automatic)} –í–∏–Ω—Ç–æ–≤–∫–∏: ${user.skill[0].automatic}%
${getSkillEmoji(user.skill[0].pistol_automatic)} –ü–ü: ${user.skill[0].pistol_automatic}%
${getSkillEmoji(user.skill[0].machine_gun)} –ü—É–ª–µ–º–µ—Ç—ã: ${user.skill[0].machine_gun}%`);
    }
},
{
    r: /^(?:pt|–ø–∞—Ç—Ä–æ–Ω—ã)(?: .*)?$/i,

    async f(msg, user) {
        msg.send(`${msg.prefix}–ø–∞—Ç—Ä–æ–Ω—ã –¥–ª—è
1‚É£ ${user.pistol_patrons ? "üî∑" : "üî∂"} –ü–∏—Å—Ç–æ–ª–µ—Ç–∞: ${numberWithCommas(user.pistol_patrons)}
2‚É£ ${user.snipe_patrons ? "üî∑" : "üî∂"} –°–Ω–∞–π–ø–µ—Ä—Å–∫–∏—Ö –≤–∏–Ω—Ç–æ–≤–æ–∫: ${numberWithCommas(user.snipe_patrons)}
3‚É£ ${user.shotgun_patrons ? "üî∑" : "üî∂"} –î—Ä–æ–±–æ–≤–∏–∫–æ–≤: ${numberWithCommas(user.shotgun_patrons)}
4‚É£ ${user.automatic_patrons ? "üî∑" : "üî∂"} –í–∏–Ω—Ç–æ–≤–æ–∫: ${numberWithCommas(user.automatic_patrons)}
5‚É£ ${user.pistol_automatic_patrons ? "üî∑" : "üî∂"} –ü–ü: ${numberWithCommas(user.pistol_automatic_patrons)}
6‚É£ ${user.machine_gun_patrons ? "üî∑" : "üî∂"} –ü—É–ª–µ–º–µ—Ç–æ–≤: ${numberWithCommas(user.machine_gun_patrons)}

üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ö—É–ø–∏—Ç—å –ø–∞—Ç—Ä–æ–Ω—ã [–Ω–æ–º–µ—Ä –æ—Ä—É–∂–∏—è] [–∫–æ–ª-–≤–æ]
üí∏ –ü–∞—Ç—Ä–æ–Ω –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Å—Ç–æ–∏—Ç 500$`);
    }
},
{
    r: /^–∫—É–ø–∏—Ç—å –ø–∞—Ç—Ä–æ–Ω—ã(?: ([^\s]+)(?: ([^\s]+)))?/i,
    f(msg, user) {
        let errMsg = `üõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏: –ö—É–ø–∏—Ç—å –ø–∞—Ç—Ä–æ–Ω—ã [–Ω–æ–º–µ—Ä –æ—Ä—É–∂–∏—è] [–∫–æ–ª-–≤–æ]
üî´ –ù–æ–º–µ—Ä–∞ –æ—Ä—É–∂–∏—è:
‚†Ä‚†Ä1‚É£ –ü–∏—Å—Ç–æ–ª–µ—Ç
‚†Ä‚†Ä2‚É£ –°–Ω–∞–π–ø–µ—Ä—Å–∫–∞—è –≤–∏–Ω—Ç–æ–≤–∫–∞
‚†Ä‚†Ä3‚É£ –î—Ä–æ–±–æ–≤–∏–∫
‚†Ä‚†Ä4‚É£ –í–∏–Ω—Ç–æ–≤–∫–∞
‚†Ä‚†Ä5‚É£ –ü–ü
‚†Ä‚†Ä6‚É£ –ü—É–ª–µ–º–µ—Ç

üí∏ –ü–∞—Ç—Ä–æ–Ω –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Å—Ç–æ–∏—Ç 500$`
        if (!msg.match[1]) return msg.send(errMsg);

        let guns = [{ id: "pistol", name: "–ø–∏—Å—Ç–æ–ª–µ—Ç–∞" }, { id: "snipe", name: "—Å–Ω–∞–π–ø–µ—Ä—Å–∫–æ–π –≤–∏–Ω—Ç–æ–≤–∫–∏" }, { id: "shotgun", name: "–¥—Ä–æ–±–æ–≤–∏–∫–∞" }, { id: "automatic", name: "–≤–∏–Ω—Ç–æ–≤–∫–∏" }, { id: "pistol_automatic", name: "–ü–ü" }, { id: "machine_gun", name: "–ø—É–ª–µ–º–µ—Ç–∞" }];
        if (isNaN(Number(msg.match[1])) || !guns[Number(msg.match[1]) - 1]) return msg.send(`üö´ –ù–æ–º–µ—Ä –æ—Ä—É–∂–∏—è –≤–≤–µ–¥–µ–Ω–æ –Ω–µ –≤–µ—Ä–Ω–æ\n${errMsg}`);
        if (isNaN(Number(msg.match[2])) || Number(msg.match[2]) < 1) return msg.send(`üö´ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç—Ä–æ–Ω–æ–≤ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ –≤–µ—Ä–Ω–æ\n${errMsg}`);

        let type = guns[Number(msg.match[1]) - 1],
            pats = Number(msg.match[2]),
            pat_money = pats * 500;

        if (pat_money > user.money) return msg.send(`üö´ –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥\nüí∏ ${pats} –ø—Ç. —Å—Ç–æ–∏—Ç ${numberWithCommas(pat_money)}$\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${numberWithCommas(user.money)}$`);
        user[type.id + "_patrons"] += pats;
        user.money -= pat_money;
        log(msg.senderId, `–ö—É–ø–∏–ª –ø–∞—Ç—Ä–æ–Ω–æ–≤ –Ω–∞ ${numberWithCommas(pat_money)}$`)

        msg.send(`${msg.prefix}–≤—ã –∫—É–ø–∏–ª–∏ ${numberWithCommas(pats)} –ø—Ç. –¥–ª—è ${type.name} –∑–∞ ${numberWithCommas(pat_money)}$\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${numberWithCommas(user.money)}$`);
    }
}];

function getSkillEmoji(n) {
    if (n < 25) return "üî∏";
    if (n < 50) return "üî∂";
    if (n < 75) return "üîπ";
    return "üî∑";
};