const { vkId, vkFromDb } = require("../../api/acc");
const { getRandomInt, numberWithCommas, numberToSmile } = require("../../api/utils");
const { users } = require("../../main");

module.exports = [
    {
        r: /^–º–∞—à–∏–Ω–∞ ([0-9]+)$/i,
        f(msg, user) {
            let id = parseInt(msg.match[1]) - 1;
            if (!user.cars[id]) return msg.send(`üö´ –£ –≤–∞—Å –Ω–µ—Ç –º–∞—à–∏–Ω—ã —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º`);
            user.car = id;
            msg.send(`üöó –í–∞—à–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –º–∞—à–∏–Ω–∞ —Ç–µ–ø–µ—Ä—å: ${user.cars[id].brand} ${user.cars[id].model}`);
        }
    },

    {
        r: /^–ø—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É ([0-9]+)$/i,
        async f(msg, user) {
            let car_id = parseInt(msg.match[1]) - 1;
            if (!user.cars[car_id]) return msg.send(`${msg.prefix}—É –≤–∞—Å –Ω–µ—Ç –∞–≤—Ç–æ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º`);

            if (car_id == user.car) delete user.car;

            let car = user.cars[car_id],
                price = getRandomInt(prices[car.rare].min, prices[car.rare].max),
                deltaMinus = getRandomInt(1000, 10000);

            price -= deltaMinus * car.prob;
            if (price <= 0) price = 100000;
            user.money += price;
            user.cars.splice(car_id, 1);
            msg.send(`‚úÖ –í—ã –ø—Ä–æ–¥–∞–ª–∏ ${car.brand} ${car.model} –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤—É –∏ –ø–æ–ª—É—á–∏–ª–∏ ${numberWithCommas(price)}$`);
        }
    },

    {
        r: /^–ø—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É ([\S]+) ([0-9]+) ([\S]+)/i,
        async f(msg, user) {
            if (user.banpay) return msg.send(`üö´ –£ –≤–∞—Å –±–∞–Ω –ø–µ—Ä–µ–¥–∞—á–∏`);

            let id = await vkId(msg.match[1]);
            await vkFromDb(id);
            if (!users[id]) return msg.send(`üö´ –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            if (id == msg.senderId) return msg.send(`üö´ –ù–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ –∞–≤—Ç–æ`);
            if (users[id].banpay) return msg.send(`üö´ –£ –¥–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –±–∞–Ω –ø–µ—Ä–µ–¥–∞—á–∏`);

            let car_id = parseInt(msg.match[2]) - 1;
            if (!user.cars[car_id]) return msg.send(`${msg.prefix}—É –≤–∞—Å –Ω–µ—Ç –∞–≤—Ç–æ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º`);

            let money = parseInt(msg.match[3].replace(/k|–∫/gi, "000"));
            if (isNaN(money)) return msg.send(`üö´ –°—É–º–º–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ`);
            if (money < 0) return msg.send(`üö´ –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ 1$`);

            if (!users[id].sellcars) users[id].sellcars = [];
            if (users[id].sellcars.find(c => c.vk == msg.senderId)) return msg.send(("üö´ –í—ã —É–∂–µ –ø—Ä–µ–¥–ª–∞–≥–∞–ª–∏ –¥–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø–æ–∫—É–ø–∫–µ –º–∞—à–∏–Ω—ã\n" +
                `üìÑ –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å, –Ω–∞–ø–∏—à–∏: "–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É ${users[id].fake_id} –æ—Ç–º–µ–Ω–∏—Ç—å"`));

            if (user.timeCarSell && user.timeCarSell + 600000 > +new Date()) return msg.send("üö´ –ü–æ–¥–æ–∂–¥–∏—Ç–µ 10 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è");
            user.cars[car_id].uid = +new Date();
            user.timeCarSell = +new Date();
            users[id].sellcars.push({
                vk: msg.senderId,
                car: user.cars[car_id],
                price: money
            });
            msg.send(`‚úÖ –í—ã –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∏ ${user.cars[car_id].brand} ${user.cars[car_id].model} –∏–≥—Ä–æ–∫—É @id${id} (${users[id].nick}) –∑–∞ ${numberWithCommas(money)}$\n` +
                `üö´ –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å, –≤–≤–µ–¥–∏—Ç–µ: "–ü—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É ${msg.match[1]} –æ—Ç–º–µ–Ω–∏—Ç—å"\n` +
                `üí≤ @id${id} (${users[id].nick}), —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É, –≤–≤–µ–¥–∏—Ç–µ: "–ö—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É ${user.fake_id}"`);
        }
    },

    {
        r: /^–ø—Ä–æ–¥–∞—Ç—å –º–∞—à–∏–Ω—É ([\S]+) –æ—Ç–º–µ–Ω–∏—Ç—å$/i,
        async f(msg) {

            let id = await vkId(msg.match[1]);
            await vkFromDb(id);
            if (!users[id]) return msg.send(`üö´ –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            if (id == msg.senderId) return;
            if (!users[id].sellcars) return;

            for (let i in users[id].sellcars) {
                if (users[id].sellcars[i].vk == msg.senderId) {
                    users[id].sellcars.splice(i, 1);
                    msg.send("üöó –û—Ç–º–µ–Ω–µ–Ω–æ!");
                }
            }
        }
    },


    {
        r: /^–∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É$/i,
        async f(msg, user) {
            if (!user.sellcars || !user.sellcars.length) return msg.send("üöó –í–∞–º –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫—É–ø–∏—Ç—å –∞–≤—Ç–æ");
            let cars = await Promise.all(user.sellcars.map(async (car, i) => {
                await vkFromDb(car.vk);
                return `${numberToSmile(i + 1)}. @id${car.vk} (${users[car.vk].nick}) –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç ${car.car.brand} ${car.car.model} –∑–∞ ${numberWithCommas(car.price)}$`;
            }));
            msg.send(
                `üöó –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:\n` +
                cars.join("\n") + "\n\n" +
                `üí≤ –î–ª—è –ø–æ–∫—É–ø–∫–∏, –≤–≤–µ–¥–∏—Ç–µ: –ö—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É [—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞]`
            );
        }
    },
    {
        r: /^–∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É ([\S]+)/i,
        async f(msg, user) {
            if (user.banpay) return msg.send("üö´ –£ –≤–∞—Å –±–∞–Ω –ø–µ—Ä–µ–¥–∞—á–∏");

            let id = await vkId(msg.match[1]);
            await vkFromDb(id);
            if (!users[id]) return msg.send(`üö´ –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω`);
            if (id == msg.senderId) return;

            let car = user.sellcars.find(c => c.vk == id);
            if (!car) return msg.send("üö´ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞–º –∫—É–ø–∏—Ç—å –∞–≤—Ç–æ");

            let car_id;
            for (let i in users[id].cars) {
                if (users[id].cars[i].uid == car.car.uid) car_id = i;
            }

            let csId;
            for (let i in user.sellcars) {
                if (user.sellcars[i].car.uid == car.car.uid) csId = i;
            }

            if (car_id == null) {
                user.sellcars.splice(csId, 1);
                return msg.send("üö´ –î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ —É–∂–µ –ø—Ä–æ–¥–∞–ª —ç—Ç—É –º–∞—à–∏–Ω—É");
            }

            if (user.money < car.price) return msg.send(
                `üö´ –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤—Ç–æ: ${numberWithCommas(car.price)}$\n` +
                `üí∞ –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(user.money)}$`
            );

            if (user.cars.length < 1 || (user.status.type == 1 && user.cars.length < 3) || ((user.status.type >= 2) && user.cars.length < 10)) {

                if (users[id].car == car_id) delete users[id].car;
                users[id].cars.splice(car_id, 1);
                user.cars.push(car.car);
                user.money -= car.price;
                users[id].money += car.price;
                user.sellcars.splice(csId, 1);

                msg.send(`‚úÖ –í—ã –∫—É–ø–∏–ª–∏ ${car.car.brand} ${car.car.model} –∑–∞ ${numberWithCommas(car.price)}$`);
            } else {
                msg.send("üöó –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –ø–∞—Ä–∫–æ–≤–∫–µ");
            }
        }
    }
]

const prices = {
    vedro: {
        min: 10000,
        max: 100000
    },
    common: {
        min: 100000,
        max: 1000000
    },
    rare: {
        min: 1000000,
        max: 10000000
    },
    epic: {
        min: 10000000,
        max: 50000000
    },
    legendary: {
        min: 50000000,
        max: 100000000
    },
    halloween: {
        min: 50000000,
        max: 100000000
    },
    newyear: {
        min: 50000000,
        max: 100000000
    },
    mystic: {
        min: 100000000,
        max: 500000000
    }
};