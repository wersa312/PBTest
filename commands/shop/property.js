const { log } = require("../../api/logs");
const { numberToSmile, numberWithCommas } = require("../../api/utils");

const houses = require("./propertys/houses.json"),
    flies = require("./propertys/flies.json"),
    yakthas = require("./propertys/yakhta.json");

module.exports = [
    {
        r: /^–∏–º—É—â–µ—Å—Ç–≤(?:–æ|–∞)$/i,
        f(msg) {
            msg.send(`üèò –í–∏–¥—ã –∏–º—É—â–µ—Å—Ç–≤:
‚†Ä‚†Äüè† –î–æ–º–∞
‚†Ä‚†Ä‚úà –°–∞–º–æ–ª–µ—Ç—ã
‚†Ä‚†Äüöó –ú–∞—à–∏–Ω—ã
‚†Ä‚†Äüõ• –Ø—Ö—Ç—ã

üîé –î–ª—è –ø–æ–∫—É–ø–∫–∏, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–∞ –∏–º—É—â–µ—Å—Ç–≤–∞.`);
        }
    },

    {
        r: /^–¥–æ–º(?:–∞)?(?: ([0-9]+))?/i,
        f(msg, user) {
            if (!msg.match[1]) return msg.send((`${msg.prefix}–¥–æ–º–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:\n`) +
                (houses.map((house, i) => `‚†Ä‚†Ä${numberToSmile(i + 1)} ${house.name} - ${numberWithCommas(house.price)}${house.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`).join("\n")) +
                (`\n\nüîé –î–ª—è –ø–æ–∫—É–ø–∫–∏, –≤–≤–µ–¥–∏—Ç–µ: –î–æ–º [–Ω–æ–º–µ—Ä]`));

            let id = Number(msg.match[1]) - 1;
            if (!houses[id]) return msg.send(`üö´ –î–æ–º–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);

            let house = houses[id],
                mn_type = house.type == "$" ? 'money' : 'gold',
                bMoney = user[mn_type],
                postfix = '';

            if (!user[mn_type]) user[mn_type] = 0;

            if (user[mn_type] < house.price) return msg.send(`üö´ –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥\n` +
                `üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–º–∞: ${numberWithCommas(house.price)}${house.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` +
                `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${numberWithCommas(user[mn_type])}${house.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`);

            if (user.property == null) user.property = {};
            if (user.property.houses) {
                /*if (user.property.houses.price) {
                    user[mn_type] += (user.property.houses.price / 2);
                    postfix = `üí∏ –ó–∞ –≤–∞—à —Å—Ç–∞—Ä—ã–π –¥–æ–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ ${numberWithCommas(user.property.houses.price / 2)}${user.property.houses.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`;
                }*/
                delete user.property.houses;
            }

            user.property.houses = house;
            user[mn_type] -= house.price;
            log(msg.senderId, `–ö—É–ø–∏–ª –¥–æ–º–∞ –∑–∞ ${numberWithCommas(house.price)}${house.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`);
            msg.send(`${msg.prefix}–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ "${house.name}" –∑–∞ ${numberWithCommas(house.price)}${house.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` +
                `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${numberWithCommas(user[mn_type])}${house.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` + postfix);
        }
    },

    {
        r: /^—Å–∞–º–æ–ª(?:–µ|—ë)—Ç(?:—ã)?(?: ([0-9]+))?/i,
        f(msg, user) {
            if (!msg.match[1]) return msg.send((`${msg.prefix}—Å–∞–º–æ–ª–µ—Ç—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏:\n`) +
                (flies.map((fly, i) => `‚†Ä‚†Ä${numberToSmile(i + 1)} ${fly.name} - ${numberWithCommas(fly.price)}${fly.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`).join("\n")) +
                (`\n\nüîé –î–ª—è –ø–æ–∫—É–ø–∫–∏, –≤–≤–µ–¥–∏—Ç–µ: –°–∞–º–æ–ª–µ—Ç [–Ω–æ–º–µ—Ä]`));

            let id = Number(msg.match[1]) - 1;
            if (!flies[id]) return msg.send(`üö´ –°–∞–º–æ–ª–µ—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);

            let fly = flies[id],
                mn_type = fly.type == "$" ? 'money' : 'gold',
                bMoney = user[mn_type],
                postfix = '';

            if (!user[mn_type]) user[mn_type] = 0;

            if (user[mn_type] < fly.price) return msg.send(`üö´ –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥\n` +
                `üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å —Å–∞–º–æ–ª–µ—Ç–∞: ${numberWithCommas(fly.price)}${fly.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` +
                `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${numberWithCommas(user[mn_type])}${fly.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`);

            if (user.property == null) user.property = {};
            if (user.property.fly) {
                /*if (user.property.fly.price) {
                    user[mn_type] += (user.property.fly.price / 2);
                    postfix = `üí∏ –ó–∞ –≤–∞—à —Å—Ç–∞—Ä—ã–π —Å–∞–º–æ–ª–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ ${numberWithCommas(user.property.fly.price / 2)}${user.property.fly.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`;
                }*/
                delete user.property.fly;
            }

            user.property.fly = fly;
            user[mn_type] -= fly.price;
            log(msg.senderId, `–ö—É–ø–∏–ª —Å–∞–º–æ–ª–µ—Ç –∑–∞ ${numberWithCommas(fly.price)}${fly.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`);
            msg.send(`${msg.prefix}–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ "${fly.name}" –∑–∞ ${numberWithCommas(fly.price)}${fly.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` +
                `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${numberWithCommas(user[mn_type])}${fly.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` + postfix);
        }
    },

    {
        r: /^—è—Ö—Ç(?:–∞|—ã)?(?: ([0-9]+))?/i,
        f(msg, user) {
            if (!msg.match[1]) return msg.send((`${msg.prefix}—è—Ö—Ç—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏:\n`) +
                (yakthas.map((yakhta, i) => `‚†Ä‚†Ä${numberToSmile(i + 1)} ${yakhta.name} - ${numberWithCommas(yakhta.price)}${yakhta.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`).join("\n")) +
                (`\n\nüîé –î–ª—è –ø–æ–∫—É–ø–∫–∏, –≤–≤–µ–¥–∏—Ç–µ: –Ø—Ö—Ç–∞ [–Ω–æ–º–µ—Ä]`));

            let id = Number(msg.match[1]) - 1;
            if (!yakthas[id]) return msg.send(`üö´ –Ø—Ö—Ç—ã —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);

            let yakhta = yakthas[id],
                mn_type = yakhta.type == "$" ? 'money' : 'gold',
                bMoney = user[mn_type],
                postfix = '';

            if (!user[mn_type]) user[mn_type] = 0;

            if (user[mn_type] < yakhta.price) return msg.send(`üö´ –£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥\n` +
                `üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å —è—Ö—Ç—ã: ${numberWithCommas(yakhta.price)}${yakhta.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` +
                `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${numberWithCommas(user[mn_type])}${yakhta.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`);

            if (user.property == null) user.property = {};
            if (user.property.yakhta) {
                /*if (user.property.yakhta.price) {
                    user[mn_type] += (user.property.yakhta.price / 2);
                    postfix = `üí∏ –ó–∞ –≤–∞—à—É —Å—Ç–∞—Ä—É—é —è—Ö—Ç—É –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ ${numberWithCommas(user.property.yakhta.price / 2)}${user.property.yakhta.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`;
                }*/
                delete user.property.yakhta;
            }

            user.property.yakhta = yakhta;
            user[mn_type] -= yakhta.price;
            log(msg.senderId, `–ö—É–ø–∏–ª —è—Ö—Ç—É –∑–∞ ${numberWithCommas(yakhta.price)}${yakhta.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}`);
            msg.send(`${msg.prefix}–≤—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ "${yakhta.name}" –∑–∞ ${numberWithCommas(yakhta.price)}${yakhta.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` +
                `üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: ${numberWithCommas(user[mn_type])}${yakhta.type == "$" ? '$' : ' –∑–æ–ª–æ—Ç–∞'}\n` + postfix);
        }
    }
]