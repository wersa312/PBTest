const { getRandomId } = require("vk-io");
const { chats, Keyboard, vkGroup, db, vkApi } = require("../../main"),
    { fancyTimeFormat } = require("../../api/utils"),
    mafia_default = require("./mafia_default.json"),
    fs = require("fs");

module.exports = [
    {
        r: /^–º–æ–Ω–æ–ø–æ–ª–∏—è+$/i,
        async f(msg) {
            if (msg.isFromUser) return msg.send(`üö´ –ò–≥—Ä–∞ –≤ –º–æ–Ω–æ–ø–æ–ª–∏—é –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–∞—Ö`);

            let chat = chats[msg.chatId];

            if (chat.monopoly) return msg.send(`‚ñ∂ –ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å${chat.mafia.started ? "." : ", –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Å—å –ø–æ –∫–Ω–æ–ø–∫–µ —Å–Ω–∏–∑—É"}`);

            if (!chat.monopolyplayed) {
                chat.monopolyplayed = true;
                await msg.send('üë• –í—ã –≤–ø–µ—Ä–≤—ã–µ –∏–≥—Ä–∞–µ—Ç–µ –≤ —ç—Ç–æ–π –±–µ—Å–µ–¥–µ –≤ –º–æ–Ω–æ–ø–æ–ª–∏—é.\nüóÇ –ü—Ä–æ—á—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å—é, –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã.\nüí¨ —Å—Å—ã–ª–∫–∞');
            }

            chat.mafia = JSON.parse(JSON.stringify(mafia_default));
            db.collection("mafia").insert({ id: msg.chatId, time: (+new Date() + (chat.mafia.settings.timeout.startgame * 60 * 1000)), lifetime: (+new Date() + (10 * 60 * 1000)) });

            await msg.send(`üë• –ù–∞–±–æ—Ä –¥–ª—è –∏–≥—Ä—ã –≤ –º–∞—Ñ–∏—é –æ—Ç–∫—Ä—ã—Ç. –ò–≥—Ä–æ–∫–æ–≤: 0\n‚ñ∂ –î–æ —Å—Ç–∞—Ä—Ç–∞: ${fancyTimeFormat(chat.mafia.settings.timeout.startgame * 60)}–º–∏–Ω.`, {
                keyboard: Keyboard.keyboard([
                    [
                        Keyboard.textButton({
                            label: "üö™ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",
                            payload: {
                                command: "mafia_join"
                            },
                            color: Keyboard.POSITIVE_COLOR
                        })
                    ],
                    [
                        Keyboard.textButton({
                            label: "‚ñ∂ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É",
                            payload: {
                                command: "mafia_start"
                            },
                            color: Keyboard.PRIMARY_COLOR
                        }),
                        Keyboard.textButton({
                            label: "‚è∞ –ü—Ä–æ–¥–ª–∏—Ç—å –≤—Ä–µ–º—è",
                            payload: {
                                command: "mafia_time_add"
                            },
                            color: Keyboard.SECONDARY_COLOR
                        })
                    ]
                ])
            });
        }
    },
    {
        payload: "mafia_join",
        async f(msg, user) {
            let mafia = chats[msg.chatId]?.mafia;
            if (!mafia) return;
            if (mafia.started) return msg.send(`üö´ ${msg.prefix}–∏–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å`);
            if (mafia.users[msg.senderId]) return msg.send(`üö´ ${msg.prefix}–≤—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ`);
            if (!msg.clientInfo.inline_keyboard) return msg.send(`üö´ ${msg.prefix}–ø–æ—Ö–æ–∂–µ –≤–∞—à –∫–ª–∏–µ–Ω—Ç —É—Å—Ç–∞—Ä–µ–ª\n‚úÖ –û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –í–ö, –ø—Ä–µ–∂–¥–µ —á–µ–º –∏–≥—Ä–∞—Ç—å`);
            if (Object.keys(mafia.users).length >= 10) return msg.send(`üö´ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤`);

            if (user.mafiainv == null) user.mafiainv = {
                "save": 0,
                "fake_docs": 0
            };

            try {
                //                 await vkGroup.api.messages.send({ user_id: msg.senderId, message: "‚ñ∂ –í—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ –º–∞—Ñ–∏–∏", random_id: getRandomId() });

                //                 let us;
                let [[us], time] = await Promise.all([
                    vkApi.api.users.get({ user_id: msg.senderId }),
                    db.collection("mafia").findOne({ id: msg.chatId }),
                    vkGroup.api.messages.send({ user_id: msg.senderId, message: "‚ñ∂Ô∏è –í—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –∏–≥—Ä–µ –º–∞—Ñ–∏–∏", random_id: getRandomId() }),
                ]);
                if (user.cache && user.cache.time > +new Date()) {
                    us = user.cache;
                } else {
                    [us] = await vkApi.api.users.get({ user_id: msg.senderId });
                    user.cache = us;
                    user.cache.time = +new Date() + 86400000;
                }

                mafia.users[msg.senderId] = {
                    role: "",
                    f_name: us.first_name,
                    s_name: us.last_name
                };

                //                 let time = await db.collection("mafia").findOne({ id: msg.chatId });
                time = Math.floor((time.time - (+new Date())) / 1000);

                msg.send(`üö™ @id${msg.senderId} (${us.first_name} ${us.last_name}) –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ\nüë• –ò–≥—Ä–æ–∫–æ–≤: ${Object.keys(chats[msg.chatId].mafia.users).length}\n‚åõ ${time < 0 ? `–ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!` : `–î–æ —Å—Ç–∞—Ä—Ç–∞: ${fancyTimeFormat(time)}`}`, { disable_mentions: 1 });
            } catch (err) {
                msg.send(`üö´ ${msg.prefix}—è –Ω–µ –º–æ–≥—É –ø–∏—Å–∞—Ç—å –≤–∞–º –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n‚ñ∂ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫–æ –º–Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É, –∏ –Ω–∞–∂–º–∏—Ç–µ "–†–∞–∑—Ä–µ—à–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è" –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ`, {
                    keyboard: Keyboard.keyboard([
                        Keyboard.urlButton({
                            label: "‚ñ∂ –ù–∞–ø–∏—à–∏ –º–Ω–µ",
                            url: "https://vk.com/write-151782797"
                        })
                    ]).inline()
                });
            }
        }
    },
    {
        payload: "mafia_start",
        f(msg) {
            let chat = chats[msg.chatId];
            vkGroup.api.messages.getConversationMembers({
                peer_id: msg.peerId
            }).then(async x => {
                if (chat.settings.games.mafiastart) {
                    for (var i in x.items) {
                        if (x.items[i].member_id == msg.senderId) {
                            if (!x.items[i].is_admin) return msg.send("üö´ –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –±–µ—Å–µ–¥—ã");
                        }
                    }
                }
                if (Object.keys(chat.mafia.users).length < 4) return msg.send("üö´ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –º–µ–Ω—å—à–µ 4-—Ö");
                if (chat.mafia.phase != "start") return;
                msg.send(`üîÑ –ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è`, {
                    keyboard: JSON.stringify({
                        buttons: []
                    })
                });
                await db.collection("mafia").updateOne({
                    id: msg.chatId
                }, {
                    $set: {
                        time: 0
                    }
                });
            }).catch(async () => {
                if (!chat.mafia) return;
                if (Object.keys(chat.mafia.users).length < 4) return msg.send("üö´ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –º–µ–Ω—å—à–µ 4-—Ö");
                if (chat.mafia.phase != "start") return;
                await db.collection("mafia").updateOne({
                    id: msg.chatId
                }, {
                    $set: {
                        time: 0
                    }
                });
            });
        }
    },
    {
        payload: "mafia_time_add",
        f(msg) {
            let chat = chats[msg.chatId];
            vkGroup.api.messages.getConversationMembers({
                peer_id: msg.peerId
            }).then(async x => {
                if (chat.settings.games.mafiastart) {
                    for (var i in x.items) {
                        if (x.items[i].member_id == msg.senderId) {
                            if (!x.items[i].is_admin) return msg.send("üö´ –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –±–µ—Å–µ–¥—ã");
                        }
                    }
                }
                let [time] = await db.collection("mafia").find({ id: msg.chatId }).toArray();
                if (time == null) return;
                await db.collection("mafia").updateOne({
                    id: msg.chatId
                }, {
                    $set: {
                        time: time.time + (60 * 1000)
                    }
                });
                msg.send("üö™ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–æ –Ω–∞ 1 –º–∏–Ω—É—Ç—É\n‚åõ –î–æ —Å—Ç–∞—Ä—Ç–∞: " + fancyTimeFormat(Math.floor((time.time - +new Date()) / 1000) + 60));
            }).catch(async () => {
                let [time] = await db.collection("mafia").find({ id: msg.chatId }).toArray();
                if (time == null) return;
                await db.collection("mafia").updateOne({
                    id: msg.chatId
                }, {
                    $set: {
                        time: time.time + (60 * 1000)
                    }
                });
                msg.send("üö™ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –ø—Ä–æ–¥–ª–µ–Ω–æ –Ω–∞ 1 –º–∏–Ω—É—Ç—É\n‚åõ –î–æ —Å—Ç–∞—Ä—Ç–∞: " + fancyTimeFormat(Math.floor((time.time - +new Date()) / 1000) + 60));
            });
        }
    }
];

fs.readdirSync(__dirname + "/core").forEach(function (file) {
    if (file.endsWith(".js")) {
        require("./core/" + file);
    }
});
