const request = require("request");
const { log } = require("../../api/logs");
const { numberWithCommas } = require("../../api/utils");

module.exports = [
    {
        r: /^–ø–æ–ø–æ–ª–Ω–∏—Ç—å$/,
        f(msg, user) {
            return msg.send("üö´ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ VK Coin –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç");
            request.get("http://188.225.82.150/getlink", function (e, h, b) {
                try {
                    b = JSON.parse(b);
                    msg.send("üí¨ –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ VK Coin: " + b.msg);
                } catch (e) { }
            });
        }
    },
    {
        r: /^(–ø—Ä–æ–¥–∞—Ç—å –≤–∫)( (.*))?$/i,

        f(msg, user) {
            if (!msg.match[3]) return msg.send(`üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —á–∏—Å–ª–æ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏\n‚úè –ü—Ä–æ–¥–∞—Ç—å –∫–æ–∏–Ω—ã [—á–∏—Å–ª–æ]`);
            if (user.vkcoin == null) user.vkcoin = 0;

            let bufc = 10000,
                coins = parseInt(msg.match[3].replace(/–≤—Å–µ|–≤—Å—ë/, Math.floor(user.vkcoin)).replace(/(k|–∫)/gi, "000"));

            if (isNaN(coins) || coins < 1) return msg.send(`üö´ –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏\n‚úè –ü—Ä–æ–¥–∞—Ç—å –≤–∫ [—á–∏—Å–ª–æ]`);
            if (user.vkcoin < coins) return msg.send(`üö´ –£ –≤–∞—Å –Ω–µ—Ç ${numberWithCommas(coins)} VK Coin\nüí† VK Coins: ${numberWithCommas(user.vkcoin)}`);

            user.money += coins * bufc;
            user.vkcoin -= coins;

            log(msg.senderId, `–ü—Ä–æ–¥–∞–ª ${coins} VK Coins –∑–∞ ${numberWithCommas(coins * bufc)}$ | –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(user.money)}$`)
            msg.send(`${msg.prefix}–≤—ã –ø—Ä–æ–¥–∞–ª–∏ ${numberWithCommas(coins)} VK Coins (+${numberWithCommas(coins * bufc)}$)\nüí† VK Coin: ${numberWithCommas(user.vkcoin)}\nüí∞ –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(user.money)}$`);
        }
    }
]