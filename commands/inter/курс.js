const request = require("request"),
    { course } = require("../../api/pockecoins"),
    { fuel } = require("../../api/fuel"),
    { numberWithCommas } = require("../../api/utils"),
    { Keyboard } = require("../../main");

let courseObj = {};

function updateCourse() {
    request.get("https://www.cbr-xml-daily.ru/daily_json.js", function (e, r, b) {
        try {
            let buffcour = JSON.parse(b).Valute;
            courseObj.KZT = buffcour.KZT.Value / buffcour.KZT.Nominal;
            courseObj.USD = buffcour.USD.Value;
            courseObj.EUR = buffcour.EUR.Value;
            courseObj.BYN = buffcour.BYN.Value;
            courseObj.UAH = buffcour.UAH.Value / buffcour.UAH.Nominal;
        } catch (err) {

        }
    });
};

updateCourse();

setInterval(updateCourse, 10000);

const courseApi = {
    rub: function (n, cs) {
        n = parseFloat(n);
        if (cs == "rub") return n;
        if (cs == "bel") return (n / courseObj.BYN).toFixed(2);
        if (cs == "kzt") return (n / courseObj.KZT).toFixed(2);
        if (cs == "usd") return (n / courseObj.USD).toFixed(2);
        if (cs == "eur") return (n / courseObj.EUR).toFixed(2);
        if (cs == "uah") return (n / courseObj.UAH).toFixed(2);
    },
    kzt: function (n, cs) {
        let kzt = (n * courseObj.KZT);
        return this.rub(kzt, cs);
    },
    usd: function (n, cs) {
        let kzt = (n * courseObj.USD);
        return this.rub(kzt, cs);
    },
    eur: function (n, cs) {
        let kzt = (n * courseObj.EUR);
        return this.rub(kzt, cs);
    },
    bel: function (n, cs) {
        let kzt = (n * courseObj.BYN);
        return this.rub(kzt, cs);
    },
    uah: function (n, cs) {
        let kzt = (n * courseObj.UAH);
        return this.rub(kzt, cs);
    }
};

const wallet = {
    //—Ä—É–±–ª—å
    "—Ä—É–±–ª—å": "rub",
    "—Ä—É–±–ª—è": "rub",
    "—Ä—É–±–ª—è—Ö": "rub",
    "—Ä—É–±–ª–µ–π": "rub",
    "—Ä—É–±–ª–∏": "rub",

    //–±–µ–ª–æ—Ä—É—Å—Å–∫–∏–π
    "–±–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å": "bel",
    "–±–µ–ª–æ—Ä—É—Å—Å–∫–∏–µ —Ä—É–±–ª–∏": "bel",
    "–±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —Ä—É–±–ª–µ–π": "bel",
    "–±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —Ä—É–±–ª—è—Ö": "bel",
    "–±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —Ä—É–±–ª—è": "bel",

    //–¥–æ–ª–ª–∞—Ä
    "–¥–æ–ª–ª–∞—Ä": "usd",
    "–¥–æ–ª–ª–∞—Ä–∞": "usd",
    "–¥–æ–ª–ª–∞—Ä—ã": "usd",
    "–¥–æ–ª–ª–∞—Ä–æ–≤": "usd",
    "–¥–æ–ª–ª–∞—Ä–∞—Ö": "usd",

    //–≥—Ä–∏–≤–Ω–∏
    "–≥—Ä–∏–≤–µ–Ω": "uah",
    "–≥—Ä–∏–≤–Ω—è": "uah",
    "–≥—Ä–∏–≤–Ω–∏": "uah",
    "–≥—Ä–∏–≤–Ω–µ–π": "uah",
    "–≥—Ä–∏–≤–µ–Ω—å": "uah",
    "–≥—Ä–∏–≤–Ω—è—Ö": "uah",
    "–≥—Ä–∏–≤–Ω—ã": "uah",

    "—Ç–µ–Ω–≥–µ": "kzt",
    "–µ–≤—Ä–æ": "eur",

    //simple
    "rub": "—Ä—É–±–ª—å",
    "bel": "–±–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å",
    "usd": "–¥–æ–ª–ª–∞—Ä",
    "kzt": "—Ç–µ–Ω–≥–µ",
    "eur": "–µ–≤—Ä–æ",
    "uah": "–≥—Ä–∏–≤–Ω–∞"
};

module.exports = [{
    r: /^–∫—É—Ä—Å+$/i,

    payload: "–∫—É—Ä—Å",
    async f(msg, user) {
        if (user.menu && msg.isFromUser) {
            msg.send(`–ö—É—Ä—Å –≤–∞–ª—é—Ç:
üíµ –î–æ–ª–ª–∞—Ä: ${courseObj.USD.toFixed(2)} —Ä—É–±–ª—å
üí∂ –ï–≤—Ä–æ: ${courseObj.EUR.toFixed(2)} —Ä—É–±–ª—å
üí∏ 10 –≥—Ä–∏–≤–µ–Ω: ${(courseObj.UAH * 10).toFixed(2)} —Ä—É–±–ª—å
üí¥ –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å: ${courseObj.BYN.toFixed(2)} —Ä—É–±–ª—å
üí¥ 100 —Ç–µ–Ω–≥–µ: ${(courseObj.KZT * 100).toFixed(2)} —Ä—É–±–ª—å` + "\n\n–ö—É—Ä—Å –∏–≥—Ä–æ–≤—ã—Ö –≤–∞–ª—é—Ç:\nüí≥ –ö—É—Ä—Å pockecoins: " + numberWithCommas(course.course) + "$\n‚õΩ –õ–∏—Ç—Ä —Ç–æ–ø–ª–∏–≤–∞: " + fuel.fuel + "$\nüèÖ Pockegold: 500,000,000" + `$
            
üí± –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É–º–º—É, –Ω–∞–ø–∏—Å–∞–≤ "[–°—É–º–º–∞] [–≤–∞–ª—é—Ç–∞] –≤ [–≤–∞–ª—é—Ç—É]"
üí± –ü—Ä–∏–º–µ—Ä: 100 —Ä—É–±–ª–µ–π –≤ —Ç–µ–Ω–≥–µ
            `,
                {
                    keyboard: Keyboard.keyboard([
                        Keyboard.textButton({
                            label: "üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                            payload: {
                                command: "–∫—É—Ä—Å"
                            },
                            color: Keyboard.POSITIVE_COLOR
                        }),
                        Keyboard.textButton({
                            label: "‚óÄ –í –º–µ–Ω—é",
                            payload: {
                                command: "menu",
                                params: "main_menu"
                            },
                            color: Keyboard.PRIMARY_COLOR
                        })
                    ])
                });
            user.scene = "course";
        } else {
            msg.send(`–ö—É—Ä—Å –≤–∞–ª—é—Ç:
üíµ –î–æ–ª–ª–∞—Ä: ${courseObj.USD.toFixed(2)} —Ä—É–±–ª—å
üí∂ –ï–≤—Ä–æ: ${courseObj.EUR.toFixed(2)} —Ä—É–±–ª—å
üí∏ 10 –≥—Ä–∏–≤–µ–Ω: ${(courseObj.UAH * 10).toFixed(2)} —Ä—É–±–ª—å
üí¥ –ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å: ${courseObj.BYN.toFixed(2)} —Ä—É–±–ª—å
üí¥ 100 —Ç–µ–Ω–≥–µ: ${(courseObj.KZT * 100).toFixed(2)} —Ä—É–±–ª—å` + "\n\n–ö—É—Ä—Å –∏–≥—Ä–æ–≤—ã—Ö –≤–∞–ª—é—Ç:\nüí≥ –ö—É—Ä—Å pockecoins: " + course.course + "$\n‚õΩ –õ–∏—Ç—Ä —Ç–æ–ø–ª–∏–≤–∞: " + fuel.fuel + "$\nüèÖ Pockegold: 500,000,000" + `$
        
üí± –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É –º–æ–∂–Ω–æ –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É: "–ö—É—Ä—Å [–°—É–º–º–∞] [–≤–∞–ª—é—Ç–∞] –≤ [–≤–∞–ª—é—Ç—É]"
üí± –ü—Ä–∏–º–µ—Ä: –ö—É—Ä—Å 100 —Ä—É–±–ª–µ–π –≤ —Ç–µ–Ω–≥–µ`);
        }
    }
},
{
    r: /^–∫—É—Ä—Å ([0-9]+) (.*) –≤ (.*)/i,
    scene: "course",

    async f(msg, user) {
        let money;
        if (msg.type == "scene") {
            msg.match = msg.text.match(/([0-9]+) (.*) –≤ (.*)/i);
            if (!msg.match) return msg.send("üö´ –û—à–∏–±–∫–∞, –≤—ã –≤–≤–µ–ª–∏ –∫–æ–º–∞–Ω–¥—É –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ\n‚úè [–°—É–º–º–∞] [–≤–∞–ª—é—Ç–∞] –≤ [–≤–∞–ª—é—Ç–µ]\nüí± –ü—Ä–∏–º–µ—Ä: 100 —Ä—É–±–ª–µ–π –≤ —Ç–µ–Ω–≥–µ");
            money = parseFloat(msg.match[1]);
            if (wallet[msg.match[2]] == null) return msg.send("üö´ –û—à–∏–±–∫–∞. –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤–∞–ª–∏–¥–Ω—É—é –≤–∞–ª—é—Ç—É\n‚úè [–°—É–º–º–∞] [–≤–∞–ª—é—Ç–∞] –≤ [–≤–∞–ª—é—Ç—É]\nüí± –ü—Ä–∏–º–µ—Ä: 100 —Ä—É–±–ª–µ–π –≤ —Ç–µ–Ω–≥–µ");
            if (wallet[msg.match[3]] == null) return msg.send("üö´ –û—à–∏–±–∫–∞. –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤–∞–ª–∏–¥–Ω—É—é –≤–∞–ª—é—Ç—É\n‚úè [–°—É–º–º–∞] [–≤–∞–ª—é—Ç–∞] –≤ [–≤–∞–ª—é—Ç—É]\nüí± –ü—Ä–∏–º–µ—Ä: 100 —Ä—É–±–ª–µ–π –≤ —Ç–µ–Ω–≥–µ");
        } else {
            money = parseFloat(msg.match[1]);
            if (wallet[msg.match[2]] == null) return msg.send("üö´ –û—à–∏–±–∫–∞. –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤–∞–ª–∏–¥–Ω—É—é –≤–∞–ª—é—Ç—É\n‚úè –ö—É—Ä—Å [–°—É–º–º–∞] [–≤–∞–ª—é—Ç–∞] –≤ [–≤–∞–ª—é—Ç—É]\nüí± –ü—Ä–∏–º–µ—Ä: –ö—É—Ä—Å 100 —Ä—É–±–ª–µ–π –≤ —Ç–µ–Ω–≥–µ");
            if (wallet[msg.match[3]] == null) return msg.send("üö´ –û—à–∏–±–∫–∞. –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –≤–∞–ª–∏–¥–Ω—É—é –≤–∞–ª—é—Ç—É\n‚úè –ö—É—Ä—Å [–°—É–º–º–∞] [–≤–∞–ª—é—Ç–∞] –≤ [–≤–∞–ª—é—Ç—É]\nüí± –ü—Ä–∏–º–µ—Ä: –ö—É—Ä—Å 100 —Ä—É–±–ª–µ–π –≤ —Ç–µ–Ω–≥–µ");
        }
        let finish = courseApi[wallet[msg.match[2]]](money, wallet[msg.match[3]]);
        finish = parseFloat(finish).toFixed(2);
        msg.send("üí¨ " + numberWithCommas(money) + " " + wallet[wallet[msg.match[2]]] + " = " + numberWithCommas(finish) + " " + wallet[wallet[msg.match[3]]]);
    }
}]