const { randElement, numberToSmile, antiBan } = require("../../api/utils"),
    { vkGroup } = require("../../main"),
    strings = require("../../vars/strings.json");

module.exports = [
    {
        r: /^–∫—Ç–æ( (.*))?$/i,
        async f(msg) {
            if (msg.isFromUser) return msg.send(`üö´ –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ`);
            try {
                let { profiles } = await vkGroup.api.messages.getConversationMembers({
                    peer_id: msg.peerId,
                    fields: "online, first_name_gen, last_name_gen, first_name_dat, last_name_dat"
                });
                if (msg.match[2]) {
                    if (msg.match[2] == "–æ–Ω–ª–∞–π–Ω" || msg.match[2] == "—Ç—É—Ç") {
                        profiles = profiles.filter(p => p.online);
                        return msg.send(`${msg.prefix}${profiles.length} –ª—é–¥–µ–π –æ–Ω–ª–∞–π–Ω:\n${profiles.map((p, i) => `${numberToSmile(i + 1)} @id${p.id} (${p.first_name} ${p.last_name}) | ${p.online_mobile ? "üì±" : "üíª"}`).join("\n")}`, { disable_mentions: 1 });
                    } else if (msg.match[2].startsWith("—É –∫–æ–≥–æ")) {
                        if (profiles.length == 1) return msg.send(`üö´ –í –±–µ—Å–µ–¥–µ –º–∞–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏`);
                        profiles = randElement(profiles, 2);
                        let f = profiles[0],
                            s = profiles[1];
                        return msg.send(`${msg.prefix}${randElement(["—Ä–∞–∑—É–º–µ–µ—Ç—Å—è", "–∫–æ–Ω–µ—á–Ω–æ –∂–µ", "–Ω–∞–≤–µ—Ä–Ω–æ–µ", "–∏–Ω—Ñ–∞ —Å–æ—Ç–∫–∞", "—è –¥—É–º–∞—é", "–≤–æ–∑–º–æ–∂–Ω–æ", "–ø–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"])} @id${f.id} (${f.first_name} ${f.last_name}) —É @id${s.id} (${s.first_name_gen} ${s.last_name_gen})`, { disable_mentions: 1 });
                    } else if (msg.match[2].startsWith("–∫–æ–≥–æ") || msg.match[2].startsWith("–∫–∞–≤–æ")) {
                        if (profiles.length == 1) return msg.send(`üö´ –í –±–µ—Å–µ–¥–µ –º–∞–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏`);
                        profiles = randElement(profiles, 2);
                        let f = profiles[0],
                            s = profiles[1];
                        return msg.send(`${msg.prefix}${randElement(["—Ä–∞–∑—É–º–µ–µ—Ç—Å—è", "–∫–æ–Ω–µ—á–Ω–æ –∂–µ", "–Ω–∞–≤–µ—Ä–Ω–æ–µ", "–∏–Ω—Ñ–∞ —Å–æ—Ç–∫–∞", "—è –¥—É–º–∞—é", "–≤–æ–∑–º–æ–∂–Ω–æ", "–ø–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"])} @id${f.id} (${f.first_name} ${f.last_name}) @id${s.id} (${s.first_name_gen} ${s.last_name_gen})`, { disable_mentions: 1 });
                    } else if (msg.match[2].startsWith("–∫–æ–º—É")) {
                        if (profiles.length == 1) return msg.send(`üö´ –í –±–µ—Å–µ–¥–µ –º–∞–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏`);
                        profiles = randElement(profiles, 2);
                        let f = profiles[0],
                            s = profiles[1];
                        return msg.send(`${msg.prefix}${randElement(["—Ä–∞–∑—É–º–µ–µ—Ç—Å—è", "–∫–æ–Ω–µ—á–Ω–æ –∂–µ", "–Ω–∞–≤–µ—Ä–Ω–æ–µ", "–∏–Ω—Ñ–∞ —Å–æ—Ç–∫–∞", "—è –¥—É–º–∞—é", "–≤–æ–∑–º–æ–∂–Ω–æ", "–ø–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"])} @id${f.id} (${f.first_name} ${f.last_name}) @id${s.id} (${s.first_name_dat} ${s.last_name_dat})`, { disable_mentions: 1 });
                    }
                }
                profile = randElement(profiles);
                return msg.send(`${msg.prefix}${randElement(["—Ä–∞–∑—É–º–µ–µ—Ç—Å—è", "–∫–æ–Ω–µ—á–Ω–æ –∂–µ", "–Ω–∞–≤–µ—Ä–Ω–æ–µ", "–∏–Ω—Ñ–∞ —Å–æ—Ç–∫–∞", "—è –¥—É–º–∞—é", "–≤–æ–∑–º–æ–∂–Ω–æ", "–ø–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"])} —ç—Ç–æ @id${profile.id} (${profile.first_name} ${profile.last_name})`, { disable_mentions: 1 });
            } catch (e) {
                msg.send(strings.chats.bot_isnt_admin);
            }
        }
    },

    {
        r: /^–∫–æ–º—É( (.*))?$/i,
        async f(msg) {
            if (msg.isFromUser) return msg.send(`üö´ –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ`);
            try {
                let { profiles } = await vkGroup.api.messages.getConversationMembers({
                    peer_id: msg.peerId,
                    fields: "first_name_dat, last_name_dat"
                });
                if (msg.match[2]) {
                    if (msg.match[2].startsWith("–∫—Ç–æ")) {
                        if (profiles.length == 1) return msg.send(`üö´ –í –±–µ—Å–µ–¥–µ –º–∞–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏`);
                        profiles = randElement(profiles, 2);
                        let f = profiles[0],
                            s = profiles[1];
                        return msg.send(`${msg.prefix}${randElement(["—Ä–∞–∑—É–º–µ–µ—Ç—Å—è", "–∫–æ–Ω–µ—á–Ω–æ –∂–µ", "–Ω–∞–≤–µ—Ä–Ω–æ–µ", "–∏–Ω—Ñ–∞ —Å–æ—Ç–∫–∞", "—è –¥—É–º–∞—é", "–≤–æ–∑–º–æ–∂–Ω–æ", "–ø–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"])} @id${f.id} (${f.first_name_dat} ${f.last_name_dat}) ${antiBan(msg.match[2].replace(/–∫—Ç–æ( )?/i, ""))} @id${s.id} (${s.first_name} ${s.last_name})`, { disable_mentions: 1 });
                    }
                }
                profile = randElement(profiles);
                return msg.send(`${msg.prefix}${randElement(["—Ä–∞–∑—É–º–µ–µ—Ç—Å—è", "–∫–æ–Ω–µ—á–Ω–æ –∂–µ", "–Ω–∞–≤–µ—Ä–Ω–æ–µ", "–∏–Ω—Ñ–∞ —Å–æ—Ç–∫–∞", "—è –¥—É–º–∞—é", "–≤–æ–∑–º–æ–∂–Ω–æ", "–ø–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"])} @id${profile.id} (${profile.first_name_dat} ${profile.last_name_dat})`, { disable_mentions: 1 });
            } catch (e) {
                msg.send(strings.chats.bot_isnt_admin);
            }
        }
    },

    {
        r: /^–∫–æ–≥–æ( (.*))?$/i,
        async f(msg) {
            if (msg.isFromUser) return msg.send(`üö´ –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–∞ —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ`);
            try {
                let { profiles } = await vkGroup.api.messages.getConversationMembers({
                    peer_id: msg.peerId,
                    fields: "first_name_acc, last_name_acc"
                });
                if (msg.match[2]) {
                    if (msg.match[2].startsWith("–∫—Ç–æ")) {
                        if (profiles.length == 1) return msg.send(`üö´ –í –±–µ—Å–µ–¥–µ –º–∞–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏`);
                        profiles = randElement(profiles, 2);
                        let f = profiles[0],
                            s = profiles[1];
                        return msg.send(`${msg.prefix}${randElement(["—Ä–∞–∑—É–º–µ–µ—Ç—Å—è", "–∫–æ–Ω–µ—á–Ω–æ –∂–µ", "–Ω–∞–≤–µ—Ä–Ω–æ–µ", "–∏–Ω—Ñ–∞ —Å–æ—Ç–∫–∞", "—è –¥—É–º–∞—é", "–≤–æ–∑–º–æ–∂–Ω–æ", "–ø–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"])} @id${f.id} (${f.first_name_acc} ${f.last_name_acc}) ${antiBan(msg.match[2].replace(/–∫—Ç–æ( )?/i, ""))} @id${s.id} (${s.first_name} ${s.last_name})`, { disable_mentions: 1 });
                    }
                }
                profile = randElement(profiles);
                return msg.send(`${msg.prefix}${randElement(["—Ä–∞–∑—É–º–µ–µ—Ç—Å—è", "–∫–æ–Ω–µ—á–Ω–æ –∂–µ", "–Ω–∞–≤–µ—Ä–Ω–æ–µ", "–∏–Ω—Ñ–∞ —Å–æ—Ç–∫–∞", "—è –¥—É–º–∞—é", "–≤–æ–∑–º–æ–∂–Ω–æ", "–ø–æ –º–æ–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"])} @id${profile.id} (${profile.first_name_acc} ${profile.last_name_acc})`, { disable_mentions: 1 });
            } catch (e) {
                msg.send(strings.chats.bot_isnt_admin);
            }
        }
    }
];