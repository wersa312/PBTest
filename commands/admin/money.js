const { vkId, vkFromDb } = require("../../api/acc");
const { log } = require("../../api/logs");
const { numberWithCommas } = require("../../api/utils");
const { users } = require("../../main");

module.exports = [
    {
        r: /^givemoney ([\S]+) ([\S]+)/i,
        status: 100,
        async f(msg, user) {
            if (user.admin_events?.canEdit) {
                let id = await vkId(msg.match[1]);
                await vkFromDb(id);

                if (!users[id]) return msg.send(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω`);

                let money = parseInt(msg.match[2].replace(/\,/g, "").replace(/k|–∫/gi, "000"));
                if (isNaN(money)) return msg.send(`‚ùå –í–≤–µ–¥–∏ –≤–∞–ª–∏–¥–Ω–æ–µ —á–∏—Å–ª–æ`);

                log(msg.senderId, `–í—ã–¥–∞–ª –¥–µ–Ω–µ–≥ –∏–≥—Ä–æ–∫—É @id${id} (${users[id].nick}) ${numberWithCommas(money)}$ | –ë—ã–ª–æ: ${numberWithCommas(users[id].money)}$ | –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(users[id].money + money)}$`);
                log(id, `–í—ã–¥–∞–Ω—ã –¥–µ–Ω—å–≥–∏ ${numberWithCommas(money)}$ –∞–¥–º–∏–Ω–æ–º @id${msg.senderId} (${users[msg.senderId].nick})`);
                msg.send(
                    `üí∏ –í—ã–¥–∞–Ω–æ @id${id} (${users[id].nick}) ${numberWithCommas(money)}$\n` +
                    `‚óÄ –ë—ã–ª–æ: ${numberWithCommas(users[id].money)}$\n` +
                    `üí∞ –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(users[id].money + money)}$`
                );
                users[id].money += money;
            }
        }
    },
    {
        r: /^setmoney ([\S]+) ([\S]+)/i,
        status: 100,
        async f(msg, user) {
            if (user.admin_events?.canEdit) {
                let id = await vkId(msg.match[1]);
                await vkFromDb(id);

                if (!users[id]) return msg.send(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω`);

                let money = parseInt(msg.match[2].replace(/\,/g, "").replace(/k|–∫/gi, "000"));
                if (isNaN(money)) return msg.send(`‚ùå –í–≤–µ–¥–∏ –≤–∞–ª–∏–¥–Ω–æ–µ —á–∏—Å–ª–æ`);

                log(msg.senderId, `–£—Å—Ç–∞–Ω–æ–≤–∏–ª –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫—É @id${id} (${users[id].nick}) ${numberWithCommas(money)}$ | –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(money)}$`);
                log(id, `–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–∞–ª–∞–Ω—Å ${numberWithCommas(money)}$ –∞–¥–º–∏–Ω–æ–º @id${msg.senderId} (${users[msg.senderId].nick})`);
                msg.send(
                    `üí∏ –ò–≥—Ä–æ–∫—É @id${id} (${users[id].nick}) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–∞–ª–∞–Ω—Å ${numberWithCommas(money)}$`
                );
                users[id].money = money;
            }
        }
    },
    {
        r: /^givegold ([\S]+) ([\S]+)/i,
        status: 100,
        async f(msg, user) {
            if (user.admin_events?.canEdit) {
                let id = await vkId(msg.match[1]);
                await vkFromDb(id);

                if (!users[id]) return msg.send(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω`);

                let money = parseInt(msg.match[2].replace(/\,/g, "").replace(/k|–∫/gi, "000"));
                if (isNaN(money)) return msg.send(`‚ùå –í–≤–µ–¥–∏ –≤–∞–ª–∏–¥–Ω–æ–µ —á–∏—Å–ª–æ`);
                if (!user.gold) user.gold = 0;

                log(msg.senderId, `–í—ã–¥–∞–ª –∏–≥—Ä–æ–∫—É @id${id} (${users[id].nick}) ${numberWithCommas(money)} –∑–æ–ª–æ—Ç–∞ | –ë—ã–ª–æ: ${numberWithCommas(users[id].gold)}$ | –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(users[id].gold + money)}$`);
                log(id, `–í—ã–¥–∞–Ω–æ ${numberWithCommas(money)} –∑–æ–ª–æ—Ç–∞ –∞–¥–º–∏–Ω–æ–º @id${msg.senderId} (${users[msg.senderId].nick})`);
                msg.send(
                    `üí∏ –í—ã–¥–∞–Ω–æ @id${id} (${users[id].nick}) ${numberWithCommas(money)} –∑–æ–ª–æ—Ç–∞\n` +
                    `‚óÄ –ë—ã–ª–æ: ${numberWithCommas(users[id].gold)}\n` +
                    `üí∞ –ë–∞–ª–∞–Ω—Å: ${numberWithCommas(users[id].gold + money)}`
                );
                users[id].gold += money;
            }
        }
    }
]