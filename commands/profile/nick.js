const { antiBan } = require("../../api/utils"),
    { log } = require("../../api/logs");

function changeNick(msg, user, text) {
    text = antiBan(text, "").replace(/(\[|\]|\@|\(|\)|\*)/g, "");
    if (text.length > 15 && user.status.type == 0) return msg.send("üö´ –õ–∏–º–∏—Ç 15 —Å–∏–º–≤–æ–ª–æ–≤");
    if (text.length > 25 && user.status.type == 1) return msg.send("üö´ –õ–∏–º–∏—Ç 25 —Å–∏–º–≤–æ–ª–æ–≤");
    if (text.length > 35 && user.status.type > 1) return msg.send("üö´ –õ–∏–º–∏—Ç 35 —Å–∏–º–≤–æ–ª–æ–≤");
    if (!text.length) return msg.send("üö´ –£–∫–∞–∂–∏—Ç–µ –≤–∞–ª–∏–¥–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º");
    log(msg.senderId, `–°–º–µ–Ω–∏–ª –Ω–∏–∫ –Ω–∞ ${text}`);
    user.nick = text;
    msg.send('‚úèÔ∏è –í–∞—à –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º: ' + user.nick);
}

module.exports = [
    {

        r: /^(?:–Ω–∏–∫|–Ω–∏–∫–Ω–µ–π–º|nick)+( (.*))?$/i,
        f(msg, user) {
            if (!msg.match[2]) return msg.send(`üìù –í–∞—à –Ω–∏–∫–Ω–µ–π–º: ${user.nick}\n‚úè –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É "–ù–∏–∫ [—Ç–µ–∫—Å—Ç]" –¥–ª—è —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞`);
            changeNick(msg, user, msg.match[2]);
        }
    },
    {

        payload: "changeNick",
        f(msg, user) {
            user.scene = "changeNick";
            msg.send('üìù  –í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ–∫—Å—Ç–æ–º –Ω–∏–∫–Ω–µ–π–º\nüö´ –î–ª—è –æ—Ç–º–µ–Ω—ã, –≤–≤–µ–¥–∏—Ç–µ "–û—Ç–º–µ–Ω–∞"');
        }
    },
    {

        scene: "changeNick",
        f(msg, user) {
            if (msg.hasText) {
                if ((/^–æ—Ç–º–µ–Ω–∞/i).test(msg.text)) {
                    msg.send("üö´ –û—Ç–º–µ–Ω–µ–Ω–æ");
                    return user.scene = null;
                }
                changeNick(msg, user, msg.text);
                delete user.scene;
            }
        }
    }
];